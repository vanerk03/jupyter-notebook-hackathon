'"{\"ip_address\":null,\"time\":\"2023-05-06T08:32:26.282Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"save_notebook\",\"cell_source\":\"[\\n  {\\n    \\\"id\\\": \\\"35c0b3b694f84140846a21197ea62f68\\\",\\n    \\\"cell_type\\\": \\\"code\\\",\\n    \\\"source\\\": \\\"# # Do not forget to check if your notebook log collection plugin is working\\\\n# from mining_extension import check_logging\\\\n# check_logging(\\\\\\\"PASTE FULL URL HERE\\\\\\\")\\\",\\n    \\\"execution_count\\\": null\\n  }\\n]\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:32:55.892Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:32:56.229Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:32:58.048Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:32:58.429Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:33:23.897Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:33:23.898Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:33:23.900Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:33:54.804Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_interrupting\",\"cell_index\":\"\",\"cell_num\":0,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:33:57.755Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_restarting\",\"cell_index\":\"\",\"cell_num\":0,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:34:01.422Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:34:01.824Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"from mining_extension import check_logging \\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:42:35.627Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"import pandas as pd\\nfrom mining_extension import check_logging \\n\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T08:42:35.627Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ModuleNotFoundError\\\",\\\"evalue\\\":\\\"No module named "pandas"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:42:36.992Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nfrom mining_extension import check_logging \\n\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T08:42:36.992Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ModuleNotFoundError\\\",\\\"evalue\\\":\\\"No module named "pandas"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:25.648Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.338Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.340Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.342Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.345Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.348Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.354Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.357Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.360Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.363Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.365Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.369Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.373Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.376Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.378Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.381Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:36.385Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":689},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:38.191Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nfrom mining_extension import check_logging \\n\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:38.200Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":1,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:39.931Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nfrom mining_extension import check_logging \\n\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:47:39.933Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nfrom mining_extension import check_logging \\n\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:49:31.110Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.plotly as plt\\nfrom mining_extension import check_logging \\n\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:49:31.112Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.plotly as plt\\nfrom mining_extension import check_logging \\n\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:49:31.836Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[:5])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:49:32.328Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[:5])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":3956}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:49:42.646Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[0])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:49:43.153Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[0])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":938}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:51:33.480Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[10])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T08:51:33.480Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "re" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:51:37.689Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.plotly as plt\\nfrom mining_extension import check_logging \\nimport re\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T08:51:37.689Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ModuleNotFoundError\\\",\\\"evalue\\\":\\\"No module named "matplotlib"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:51:47.025Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:52:14.772Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":91},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1684},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:53:16.352Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.plotly as plt\\nfrom mining_extension import check_logging \\nimport re\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T08:53:16.352Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ModuleNotFoundError\\\",\\\"evalue\\\":\\\"No module named "matplotlib.plotly"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:53:31.249Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:53:32.430Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\n\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:53:35.467Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[10])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:53:35.532Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[10])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:54:01.659Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[11])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:54:01.705Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[11])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:54:04.206Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[13])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:54:04.253Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data[13])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:54:07.388Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:54:07.425Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1030}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:55:30.664Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:55:30.706Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nprint(data)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":936}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:57:08.691Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = re.split("-> |--> |: ", data)\\nprint(data)\\n\\nfor i, x in enumerate(data):\\n    data[i] = data[i]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:57:08.766Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = re.split("-> |--> |: ", data)\\nprint(data)\\n\\nfor i, x in enumerate(data):\\n    data[i] = data[i]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":968}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:59:48.971Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = re.split("-> |--> |: ", data)\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nfor i, x in enumerate(data):\\n    data[i] = data[i]\\n    \",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T08:59:49.479Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = re.split("-> |--> |: ", data)\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nfor i, x in enumerate(data):\\n    data[i] = data[i]\\n    \",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":968}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:03:37.473Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = re.split("-> |--> |: ", data)\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nfor i, x in enumerate(data):\\n    data[i] = data[i]\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:03:38.072Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = re.split("-> |--> |: ", data)\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nfor i, x in enumerate(data):\\n    data[i] = data[i]\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":968}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:03:40.746Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = re.split("-> |--> |: ", data)\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nfor i, x in enumerate(data):\\n    data[i] = data[i]\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:03:40.760Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:03:41.280Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":3,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\ndata = re.split("-> |--> |: ", data)\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\nfor i, x in enumerate(data):\\n    data[i] = data[i]\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":968}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:03:43.634Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:03:43.727Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":645}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:07:29.460Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df2 = df.append(pd.Series([1, 2, 3, 4], index=df.columns, name="7"))\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:07:29.460Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrame" object has no attribute "append"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:13:11.621Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\naction_name, date_time = action.split(\\\" (\\\")\\ndate, time = date_time.split(\\\" | \\\")\\nday, month, year = date.split(\\\"/\\\"\\nhour, minute, second = time.split(\\\":\\\")\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": None,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\n# Append the new row to the DataFrame\\ndf = df.append(new_row, ignore_index=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:13:11.621Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"invalid syntax. Perhaps you forgot a comma? (2183823082.py, line 4)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:13:16.069Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\naction_name, date_time = action.split(\\\" (\\\")\\ndate, time = date_time.split(\\\" | \\\")\\nday, month, year = date.split(\\\"/\\\")\\nhour, minute, second = time.split(\\\":\\\")\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": None,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\n# Append the new row to the DataFrame\\ndf = df.append(new_row, ignore_index=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:13:16.069Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ValueError\\\",\\\"evalue\\\":\\\"invalid literal for int() with base 10: "02)"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:14:39.057Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": None,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n# Append the new row to the DataFrame\\ndf = df.append(new_row, ignore_index=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:14:39.057Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrame" object has no attribute "append"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:14:46.235Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": None,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n# Append the new row to the DataFrame\\n# df = df.append(new_row, ignore_index=True)\\nnew_row\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:14:46.297Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": None,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n# Append the new row to the DataFrame\\n# df = df.append(new_row, ignore_index=True)\\nnew_row\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":174}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:16:50.610Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Convert YY to YYYY format\\n\\nyear = \\\"20\\\" + year\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": 0,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\n\\nnew_row\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:16:50.662Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Convert YY to YYYY format\\n\\nyear = \\\"20\\\" + year\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": 0,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\n\\nnew_row\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":174}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:17:37.727Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Convert YY to YYYY format\\n\\nyear = \\\"20\\\" + year\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": 0,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\ndf = pd.concat([df, new_row.to_frame().T], ignore_index=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:17:37.812Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Convert YY to YYYY format\\n\\nyear = \\\"20\\\" + year\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": 0,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\ndf = pd.concat([df, new_row.to_frame().T], ignore_index=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:17:44.906Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Convert YY to YYYY format\\n\\nyear = \\\"20\\\" + year\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": 0,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\ndf = pd.concat([df, new_row.to_frame().T], ignore_index=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:17:44.956Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Convert YY to YYYY format\\n\\nyear = \\\"20\\\" + year\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": 0,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\ndf = pd.concat([df, new_row.to_frame().T], ignore_index=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:17:49.834Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Convert YY to YYYY format\\n\\nyear = \\\"20\\\" + year\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": 0,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\ndf = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:17:49.917Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"action = \\\"Action_3 (15/10/19 | 18:08:02)\\\"\\n\\nmatch = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\naction_name = match.group(1)\\nday, month, year = match.group(2, 3, 4)\\nhour, minute, second = match.group(5, 6, 7)\\n\\n# Convert YY to YYYY format\\n\\nyear = \\\"20\\\" + year\\n\\n# Create a new Series with the parsed data\\nnew_row = pd.Series({\\n    \\\"user_id\\\": None,  # Replace None with the user_id value\\n    \\\"session_num\\\": 0,  # Replace None with the session_num value\\n    \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n    \\\"action_name\\\": action_name\\n})\\n\\ndf = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1195}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:22:11.347Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    data[i] = data[i]\\n    data = re.split("-> |--> |: ", data)\\n    data = list(filter(len, data))\\n    \\n    user = data[0][1:]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user_str)\\n    user_id = int(match.group(1))\\n    \\n    for action in data[1:]:\\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":936},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:22:11.347Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"expected string or bytes-like object\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:22:48.669Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0][1:]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user_str)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":936},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:22:48.669Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "user_str" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:22:56.183Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0][1:]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":936},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:22:56.183Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""NoneType" object has no attribute "group"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:23:06.436Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\nprint(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0][1:]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    print(match)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":942},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:23:06.436Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""NoneType" object has no attribute "group"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:23:12.632Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0][1:]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    print(match)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:23:12.632Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""NoneType" object has no attribute "group"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:23:30.451Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    print(user)\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    \\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:23:32.632Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    print(user)\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    \\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":280},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2824}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:25:05.088Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        \\n        match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n\\n        action_name = match_.group(1)\\n        day, month, year = match_.group(2, 3, 4)\\n        hour, minute, second = match_.group(5, 6, 7)\\n\\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:25:05.088Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""NoneType" object has no attribute "group"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:25:25.022Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        \\n        match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n        print(action)\\n        action_name = match_.group(1)\\n        day, month, year = match_.group(2, 3, 4)\\n        hour, minute, second = match_.group(5, 6, 7)\\n        \\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":901},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:25:25.022Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""NoneType" object has no attribute "group"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:25:46.337Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: ", data[i])\\n    tmp = list(filter(len, tmp))\\n    print(tmp)\\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        \\n        match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n        print(action)\\n        action_name = match_.group(1)\\n        day, month, year = match_.group(2, 3, 4)\\n        hour, minute, second = match_.group(5, 6, 7)\\n        \\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1870},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:25:46.337Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""NoneType" object has no attribute "group"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:26:05.309Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        \\n        match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n        print(action)\\n        action_name = match_.group(1)\\n        day, month, year = match_.group(2, 3, 4)\\n        hour, minute, second = match_.group(5, 6, 7)\\n        \\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:26:06.682Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        \\n        match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n        print(action)\\n        action_name = match_.group(1)\\n        day, month, year = match_.group(2, 3, 4)\\n        hour, minute, second = match_.group(5, 6, 7)\\n        \\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":16789},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8813},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2832}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:26:43.939Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        \\n        match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n#         print(action)\\n        action_name = match_.group(1)\\n        day, month, year = match_.group(2, 3, 4)\\n        hour, minute, second = match_.group(5, 6, 7)\\n        \\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:26:45.226Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:30]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        \\n        match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n#         print(action)\\n        action_name = match_.group(1)\\n        day, month, year = match_.group(2, 3, 4)\\n        hour, minute, second = match_.group(5, 6, 7)\\n        \\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2832}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:26:55.157Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"@User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        \\n        match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n#         print(action)\\n        action_name = match_.group(1)\\n        day, month, year = match_.group(2, 3, 4)\\n        hour, minute, second = match_.group(5, 6, 7)\\n        \\n        new_row = pd.Series({\\n            \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n            \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n            \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n            \\\"action_name\\\": action_name\\n        })\\n        df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n    \\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:26:55.157Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""NoneType" object has no attribute "group"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:29:45.894Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = \\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:29:45.896Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = \\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:29:45.897Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = \\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:31:13.612Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\n# print(data)\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\n\\nprint(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":34075},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:31:13.612Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"IndexError\\\",\\\"evalue\\\":\\\"list index out of range\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:31:49.373Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\n\\nprint(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:40]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":34075},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:31:49.373Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"IndexError\\\",\\\"evalue\\\":\\\"list index out of range\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:31:59.536Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:40]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:31:59.536Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"IndexError\\\",\\\"evalue\\\":\\\"list index out of range\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:32:23.393Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ntmp = list(filter(len, tmp))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:40]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:32:23.393Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"IndexError\\\",\\\"evalue\\\":\\\"list index out of range\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:32:44.618Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:40]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:32:46.489Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:40]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2846}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:33:03.441Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:40]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n            year = \\\"20\\\" + year\\n            \\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:33:06.080Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:40]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n            action_name = match_.group(1)\\n            day, month, year = match_.group(2, 3, 4)\\n            hour, minute, second = match_.group(5, 6, 7)\\n            year = \\\"20\\\" + year\\n            \\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,  # Replace None with the user_id value\\n                \\\"session_num\\\": np.NaN,  # Replace None with the session_num value\\n                \\\"action_time\\\": pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second)),\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2834}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:38:34.917Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+) \\\"\\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action_str)\\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = action_str\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action_str)\\n            time_match = re.search(time_pattern, action_str)\\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":3586},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:38:34.917Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyboardInterrupt\\\",\\\"evalue\\\":\\\"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:44:25.626Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, ata))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data[:40]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            match_ = re.match(r\\\"(.*) \\\\((\\\\d{2})/(\\\\d{2})/(\\\\d{2}) \\\\| (\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\\)\\\", action)\\n    #         print(action)\\n    PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action_str)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = action_str\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action_str)\\n            time_match = re.search(time_pattern, action_str)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:44:25.626Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"expected "except" or "finally" block (1111719749.py, line 31)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:45:12.975Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, ata))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action_str)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = action_str\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action_str)\\n            time_match = re.search(time_pattern, action_str)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:45:12.975Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "ata" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:45:28.886Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action_str)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = action_str\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action_str)\\n            time_match = re.search(time_pattern, action_str)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:45:28.886Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "action_str" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:45:52.313Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = action_str\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:45:52.313Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "action_str" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:46:26.356Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\nfor i, x in enumerate(data[:50]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = np.NaN\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:46:26.356Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyboardInterrupt\\\",\\\"evalue\\\":\\\"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:46:28.437Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\nfor i, x in enumerate(data[:50]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = np.NaN\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:46:31.812Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\nfor i, x in enumerate(data[:50]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = np.NaN\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2840}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:49:56.711Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:100]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = np.NaN\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            \\n            user_id_lst.append(user_id) \\n            session_num_lst.append(0)\\n            action_time_lst.append(action_time)\\n            action_name_lst.append(action_name)\\n#             df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\nuser_id_lst\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:49:56.713Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:100]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = np.NaN\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            \\n            user_id_lst.append(user_id) \\n            session_num_lst.append(0)\\n            action_time_lst.append(action_time)\\n            action_name_lst.append(action_name)\\n#             df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\nuser_id_lst\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:49:58.269Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:100]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = np.NaN\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            \\n            user_id_lst.append(user_id) \\n            session_num_lst.append(0)\\n            action_time_lst.append(action_time)\\n            action_name_lst.append(action_name)\\n#             df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\nuser_id_lst\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:49:59.416Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:100]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = np.NaN\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            \\n            user_id_lst.append(user_id) \\n            session_num_lst.append(0)\\n            action_time_lst.append(action_time)\\n            action_name_lst.append(action_name)\\n#             df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\nuser_id_lst\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":6173}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:50:08.731Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:10000]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        try:\\n            action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n            \\n            date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n            time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n            # Parse the action name\\n            match = re.match(action_pattern, action)\\n            \\n            if match:\\n                action_name = match.group(1)\\n            else:\\n                action_name = np.NaN\\n\\n            # Parse the date and time fields, if present\\n            date_match = re.search(date_pattern, action)\\n            time_match = re.search(time_pattern, action)\\n            \\n            if date_match and time_match:\\n                day, month, year = date_match.groups()\\n                hour, minute, second = time_match.groups()\\n                year = \\\"20\\\" + year\\n                action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n            else:\\n                action_time = np.NaN\\n\\n            # Create a new Series with the parsed data\\n            new_row = pd.Series({\\n                \\\"user_id\\\": user_id,\\n                \\\"session_num\\\": np.NaN,\\n                \\\"action_time\\\": action_time,\\n                \\\"action_name\\\": action_name\\n            })\\n            \\n            user_id_lst.append(user_id) \\n            session_num_lst.append(0)\\n            action_time_lst.append(action_time)\\n            action_name_lst.append(action_name)\\n#             df = pd.concat([df, new_row.to_frame().T], ignore_index=True)\\n        except AttributeError:\\n            print(action)\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\nuser_id_lst\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:51:01.116Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:10000]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\nuser_id_lst\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":6173}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:51:59.010Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:10000]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T09:51:59.010Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"invalid syntax. Perhaps you forgot a comma? (3871963818.py, line 63)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:52:07.094Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:10000]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:52:12.506Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:10000]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2877}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:53:15.702Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:53:58.296Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2891}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:55:46.127Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:55:46.894Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2850}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:56:40.396Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:10000]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n        if action_time == np.NaN:\\n            print(action)\\n            break\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:56:49.470Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data[:10000]):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n        if action_time == np.NaN:\\n            print(action)\\n            break\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2877}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:56:56.900Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n        if action_time == np.NaN:\\n            print(action)\\n            break\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T09:57:52.311Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":3,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n        \\n        if action_time == np.NaN:\\n            print(action)\\n            break\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(0)\\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\n    \\n# user_id, session_num (assuming that the first session by time is 0), action_time, action_name\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2891}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:00:48.270Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:00:54.429Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df.isna().sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:00:54.634Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df.isna().sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":113}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:02:58.971Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:03:52.272Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:        \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8703},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8899},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8800},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8768},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1939},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:04:42.296Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:    \\n        if len(action.strip()) == 0:\\n            continue\\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:05:28.972Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:    \\n        if len(action.strip()) == 0:\\n            continue\\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8803},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8843},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":9169},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8948},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1116},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:06:33.900Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:    \\n        if len(action.strip()) == 0:\\n            continue\\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n            print(action)\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:07:22.983Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:    \\n        if len(action.strip()) == 0:\\n            continue\\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n            print(action)\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8692},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8606},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8604},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":4765},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:12:14.743Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n            print(action)\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:13:00.015Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\ndata = \\\"@User92: Action_3 (15/10/19 | 18:08:02) -> Action_1 (15/10/19 | 18:54:49) -> Action_10 (15/10/19 | 20:02:54) -> Action_7 (15/10/19 | 20:26:56) -> Action_0 (15/10/19 | 20:51:09) -> Action_3 (15/10/19 | 22:00:47) -> Action_0 (15/10/19 | 22:49:59) -> Action_7 (15/10/19 | 23:08:43) -> Action_7 (15/10/19 | 23:51:57) -> Action_4 (16/10/19 | 00:10:14) -> Action_8 (16/10/19 | 00:28:14) -> Action_7 (16/10/19 | 01:04:24) -> Action_7 (16/10/19 | 00:47:45) -> Action_3 (16/10/19 | 00:34:58) -> Action_10 (16/10/19 | 00:50:19) -> Action_1 (16/10/19 | 00:54:43) -> Action_1 (16/10/19 | 01:32:37) -> Action_4 (16/10/19 | 01:39:53) -> Action_8 (16/10/19 | 01:35:39) -> Action_5 (16/10/19 | 02:41:46) -> Action_10 (16/10/19 | 03:06:10) --> Action_1 (16/10/19 | 03:37:28) -> Action_8 (16/10/19 | 03:33:07) -> Action_10 (16/10/19 | 03:49:30) -> Action_7 (16/10/19 | 04:22:15) -> Action_0 (16/10/19 | 04:23:57) -> Action_3 (16/10/19 | 05:03:15) -> \\\"\\n# data = open(PATH_TO_DATA, \\\"r\\\").readlines()\\n# data = re.split("-> |--> |: ", \\\"@User45: Action_7 (10/01/21 | 17:09:28) -> Action_7 (10/01/21 | 17:41:36) -> Action_1 (10/01/21 | 18:10:06) -> Action_10 (10/01/21 | 18:24:38) -> Action_4 (10/01/21 | 18:47:37) -> Action_3 (10/01/21 | 19:00:54) -> Action_7 (10/01/21 | 20:00:46) -> Action_7 (10/01/21 | 20:13:22) -> Action_10 (10/01/21 | 20:41:27) -> Action_8 (10/01/21 | 20:19:27) -> Action_8 (10/01/21 | 20:31:47) -> Action_1 (10/01/21 | 21:17:43) -> Action_6 (10/01/21 | 21:58:44) -> Action_0 (10/01/21 | 22:39:20) -> Action_0 (10/01/21 | 23:08:30) -> Action_10 (10/01/21 | 23:44:57) -> Action_10 (11/01/21 | 00:51:20) -> Action_1 (11/01/21 | 00:57:24) -> Action_7 (11/01/21 | 01:58:14) -> Action_1 (11/01/21 | 02:05:23) -> Action_4 (11/01/21 | 02:42:32) -> Action_3 (11/01/21 | 02:50:46) -> Action_5 (11/01/21 | 03:42:37) -> Action_2 (11/01/21 | 03:41:16) -> Action_10 (11/01/21 | 03:46:02) --> Action_10 (11/01/21 | 04:13:04) -> Action_4 (11/01/21 | 04:24:03) -> Action_4 (11/01/21 | 04:36:26) -> END (11/01/21 | 05:22:24)\\\")\\n\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\n# print(data[:40])\\n\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n            print(action)\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    \\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8598},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8850},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8710},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":3487},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:14:22.358Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:15:08.308Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n            print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8983},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8818},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8742},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":8344},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:15:58.820Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:16:02.845Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:16:47.904Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":3,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:16:48.572Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2890}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:20:04.673Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ndf[\\\"session_num\\\"] = df.index + 1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:20:05.647Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ndf[\\\"session_num\\\"] = df.index + 1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:20:18.460Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ndf[\\\"session_num\\\"] = df.index + 1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:20:19.047Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ndf[\\\"session_num\\\"] = df.index + 1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:23:13.905Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"first_action_times = df.groupby(["session_num"])["action_time"].min().reset_index()\\n\\nfirst_action_times.sort_values(["action_time"], inplace=True)\\n\\nfirst_action_times["session_num_sorted"] = first_action_times.groupby("user_id").cumcount() + 1\\n\\ndf = df.merge(first_action_times[["user_id", "session_num", "session_num_sorted"]],\\n              on=["user_id", "session_num"])\\ndf.drop("session_num", axis=1, inplace=True)\\ndf.rename(columns={"session_num_sorted": "session_num"}, inplace=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:23:13.905Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""user_id"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:23:30.128Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"first_action_times = df.groupby(["session_num", \\\"user_id\\\"])["action_time"].min().reset_index()\\n\\nfirst_action_times.sort_values(["action_time"], inplace=True)\\n\\nfirst_action_times["session_num_sorted"] = first_action_times.groupby("user_id").cumcount() + 1\\n\\ndf = df.merge(first_action_times[["user_id", "session_num", "session_num_sorted"]],\\n              on=["user_id", "session_num"])\\ndf.drop("session_num", axis=1, inplace=True)\\ndf.rename(columns={"session_num_sorted": "session_num"}, inplace=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:23:33.753Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"first_action_times = df.groupby(["session_num", \\\"user_id\\\"])["action_time"].min().reset_index()\\n\\nfirst_action_times.sort_values(["action_time"], inplace=True)\\n\\nfirst_action_times["session_num_sorted"] = first_action_times.groupby("user_id").cumcount() + 1\\n\\ndf = df.merge(first_action_times[["user_id", "session_num", "session_num_sorted"]],\\n              on=["user_id", "session_num"])\\ndf.drop("session_num", axis=1, inplace=True)\\ndf.rename(columns={"session_num_sorted": "session_num"}, inplace=True)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:23:41.058Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"first_action_times = df.groupby(["session_num", \\\"user_id\\\"])["action_time"].min().reset_index()\\n\\nfirst_action_times.sort_values(["action_time"], inplace=True)\\n\\nfirst_action_times["session_num_sorted"] = first_action_times.groupby("user_id").cumcount() + 1\\n\\ndf = df.merge(first_action_times[["user_id", "session_num", "session_num_sorted"]],\\n              on=["user_id", "session_num"])\\ndf.drop("session_num", axis=1, inplace=True)\\ndf.rename(columns={"session_num_sorted": "session_num"}, inplace=True)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:23:44.586Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"first_action_times = df.groupby(["session_num", \\\"user_id\\\"])["action_time"].min().reset_index()\\n\\nfirst_action_times.sort_values(["action_time"], inplace=True)\\n\\nfirst_action_times["session_num_sorted"] = first_action_times.groupby("user_id").cumcount() + 1\\n\\ndf = df.merge(first_action_times[["user_id", "session_num", "session_num_sorted"]],\\n              on=["user_id", "session_num"])\\ndf.drop("session_num", axis=1, inplace=True)\\ndf.rename(columns={"session_num_sorted": "session_num"}, inplace=True)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2842}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:30:22.121Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ndf[\\\"session_num\\\"] = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"].rank(method=\\\"dense\\\").astype(int) - 1\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:30:22.121Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"IntCastingNaNError\\\",\\\"evalue\\\":\\\"Cannot convert non-finite values (NA or inf) to integer\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:31:38.381Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ngrouped = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"]\\nranked = grouped.rank(method=\\\"dense\\\").fillna(0)\\nis_inf = ranked == np.inf\\nranked[is_inf] = 0\\ndf[\\\"session_num\\\"] = ranked.astype(int)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:31:39.486Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ngrouped = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"]\\nranked = grouped.rank(method=\\\"dense\\\").fillna(0)\\nis_inf = ranked == np.inf\\nranked[is_inf] = 0\\ndf[\\\"session_num\\\"] = ranked.astype(int)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:31:49.811Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ngrouped = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"]\\nranked = grouped.rank(method=\\\"dense\\\").fillna(0)\\nis_inf = ranked == np.inf\\nranked[is_inf] = 0\\ndf[\\\"session_num\\\"] = ranked.astype(int)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:31:50.837Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ngrouped = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"]\\nranked = grouped.rank(method=\\\"dense\\\").fillna(0)\\nis_inf = ranked == np.inf\\nranked[is_inf] = 0\\ndf[\\\"session_num\\\"] = ranked.astype(int)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2823}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:32:00.416Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:32:07.821Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ngrouped = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"]\\nranked = grouped.rank(method=\\\"dense\\\").fillna(0)\\nis_inf = ranked == np.inf\\nranked[is_inf] = 0\\ndf[\\\"session_num\\\"] = ranked.astype(int)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:32:16.627Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:32:51.734Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":2,\"cell_source\":\"df1 = df\\ndf = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ngrouped = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"]\\nranked = grouped.rank(method=\\\"dense\\\").fillna(0)\\nis_inf = ranked == np.inf\\nranked[is_inf] = 0\\ndf[\\\"session_num\\\"] = ranked.astype(int)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2823}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:33:39.755Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:33:39.758Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:34:13.438Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:34:14.062Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2890}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:34:16.228Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ngrouped = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"]\\nranked = grouped.rank(method=\\\"dense\\\").fillna(0)\\nis_inf = ranked == np.inf\\nranked[is_inf] = 0\\ndf[\\\"session_num\\\"] = ranked.astype(int)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:34:17.636Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf = df.sort_values(\\\"action_time\\\").reset_index(drop=True)\\ngrouped = df.groupby(\\\"user_id\\\")[\\\"action_time\\\"]\\nranked = grouped.rank(method=\\\"dense\\\").fillna(0)\\nis_inf = ranked == np.inf\\nranked[is_inf] = 0\\ndf[\\\"session_num\\\"] = ranked.astype(int)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2823}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:40:56.633Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf["first_action_time"] = df.groupby("session_num")["action_time"].transform("min")\\n# Sort the dataframe by first action time and assign new session numbers\\ndf = df.sort_values(by=["first_action_time", "session_num"])\\ndf["new_session_num"] = df.groupby("session_num").ngroup()\\ndf = df.drop(columns=["first_action_time"])\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:40:58.114Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf["first_action_time"] = df.groupby("session_num")["action_time"].transform("min")\\n# Sort the dataframe by first action time and assign new session numbers\\ndf = df.sort_values(by=["first_action_time", "session_num"])\\ndf["new_session_num"] = df.groupby("session_num").ngroup()\\ndf = df.drop(columns=["first_action_time"])\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3264}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:41:04.896Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:41:41.324Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf["first_action_time"] = df.groupby("session_num")["action_time"].transform("min")\\n# Sort the dataframe by first action time and assign new session numbers\\ndf = df.sort_values(by=["first_action_time", "session_num"])\\ndf["new_session_num"] = df.groupby("session_num").ngroup()\\ndf = df.drop(columns=["first_action_time"])\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:41:56.276Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:41:57.384Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":2,\"cell_source\":\"df1 = df\\ndf["first_action_time"] = df.groupby("session_num")["action_time"].transform("min")\\n# Sort the dataframe by first action time and assign new session numbers\\ndf = df.sort_values(by=["first_action_time", "session_num"])\\ndf["new_session_num"] = df.groupby("session_num").ngroup()\\ndf = df.drop(columns=["first_action_time"])\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3424}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:42:39.305Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:42:39.882Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3361}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:42:42.301Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf["first_action_time"] = df.groupby("session_num")["action_time"].transform("min")\\n# Sort the dataframe by first action time and assign new session numbers\\ndf = df.sort_values(by=["first_action_time", "session_num"])\\ndf["new_session_num"] = df.groupby("session_num").ngroup()\\ndf = df.drop(columns=["first_action_time"])\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:42:43.440Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf["first_action_time"] = df.groupby("session_num")["action_time"].transform("min")\\n# Sort the dataframe by first action time and assign new session numbers\\ndf = df.sort_values(by=["first_action_time", "session_num"])\\ndf["new_session_num"] = df.groupby("session_num").ngroup()\\ndf = df.drop(columns=["first_action_time"])\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3424}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:45:41.474Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df1 = df\\ndf["first_action_time"] = df.groupby("session_num")["action_time"].transform("min")\\n# Sort the dataframe by first action time and assign new session numbers\\ndf = df.sort_values(by=["first_action_time", "session_num"])\\ndf["new_session_num"] = df.groupby("session_num").ngroup()\\ndf = df.drop(columns=["first_action_time"])\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:45:41.496Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":4,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:45:42.769Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":5,\"cell_source\":\"df1 = df\\ndf["first_action_time"] = df.groupby("session_num")["action_time"].transform("min")\\n# Sort the dataframe by first action time and assign new session numbers\\ndf = df.sort_values(by=["first_action_time", "session_num"])\\ndf["new_session_num"] = df.groupby("session_num").ngroup()\\ndf = df.drop(columns=["first_action_time"])\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3424}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:45:56.852Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:45:56.895Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:46:06.755Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\").min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:46:07.735Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\").min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:46:27.691Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:46:27.872Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":404}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:46:53.474Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min().sort_values(by=[\\\"action_time\\\"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:46:53.474Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"Series.sort_values() got an unexpected keyword argument "by"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:46:58.578Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min().sort_values([\\\"action_time\\\"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:46:58.578Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"Series.sort_values() takes 1 positional argument but 2 were given\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:06.965Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min().sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:47:06.965Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"Series.sort_values() takes 1 positional argument but 2 were given\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:10.898Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min().sort_values()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:11.072Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min().sort_values()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":404}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:31.757Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:31.899Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":404}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:37.437Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:37.578Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:42.424Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:47:42.587Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_time\\\"].min()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":404}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:48:32.566Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:48:32.723Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2097}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:48:46.680Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:48:46.846Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2133}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:51:08.833Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ndf["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:51:08.833Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""None of [0] are in the columns"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:51:25.480Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\ndf["session_num"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:51:25.635Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\ndf["session_num"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":252}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:51:33.128Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\ndf["session_num"].min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:51:33.292Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\ndf["session_num"].min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":18}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:51:38.915Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\ntmp.min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:51:39.100Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\ntmp.min()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":18}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:52:55.402Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\n# tmp.min()\\n\\ntmp.map(df2[\\\"session_num\\\"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:52:55.583Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\n# tmp.min()\\n\\ntmp.map(df2[\\\"session_num\\\"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":219}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:53:16.214Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\n# tmp.min()\\n\\ndf2.map(tmp[\\\"session_num\\\"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:53:16.214Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrame" object has no attribute "map"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:53:29.687Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\n# tmp.min()\\n\\ndf2[\\\"session_num\\\".map(tmp)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:53:29.687Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\""[" was never closed (2026037704.py, line 10)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:53:34.740Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\n# tmp.min()\\n\\ndf2[\\\"session_num\\\".map(tmp)]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:53:34.740Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""str" object has no attribute "map"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:53:42.049Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\n# tmp.min()\\n\\ndf2[\\\"session_num\\\"].map(tmp)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:53:42.238Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# df["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\n# df["session_num"].min()\\n# tmp.min()\\n\\ndf2[\\\"session_num\\\"].map(tmp)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":219}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:54:24.212Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ndf["new_session_num"] = df["session_num"].map(tmp.reset_index().set_index(0)["index"])\\ndf["session_num"].min()\\n# tmp.min()\\n\\n# df2[\\\"session_num\\\"].map(tmp)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:54:24.212Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""None of [0] are in the columns"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:55:28.551Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ndf["new_session_num"] = df["session_num"].map(tmp.reset_index\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:55:28.551Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\""(" was never closed (4142814183.py, line 6)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:55:33.413Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ndf["new_session_num"] = df["session_num"].map(tmp.reset_index)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:55:33.413Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"IndexError\\\",\\\"evalue\\\":\\\"Too many levels: Index has only 1 level, not 40831\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:56:58.547Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ndf["new_session_num"] = df["session_num"].map(tmp.reset_index)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:56:58.547Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"IndexError\\\",\\\"evalue\\\":\\\"Too many levels: Index has only 1 level, not 40831\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:57:25.267Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = df.Series([1, 2, 1, 3])\\ns2 = df.Series([1, 2, 1, 3])\\n\\ns1.map(s2)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:57:25.267Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrame" object has no attribute "Series"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:57:35.939Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 1, 3])\\n\\ns1.map(s2)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:57:35.987Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 1, 3])\\n\\ns1.map(s2)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:57:50.803Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns1.map(s2)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:57:50.847Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns1.map(s2)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:58:12.423Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns1.map(s2)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:58:12.466Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns1.map(s2)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:58:23.314Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\n# s2 = pd.Series([1, 2, 4, 3])\\n\\n# s1.map(s2)\\ndict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:58:23.357Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\n# s2 = pd.Series([1, 2, 4, 3])\\n\\n# s1.map(s2)\\ndict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":41}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:58:34.751Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\n# s2 = pd.Series([1, 2, 4, 3])\\n\\ns1.map(dict(s2))\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:58:34.801Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\n# s2 = pd.Series([1, 2, 4, 3])\\n\\ns1.map(dict(s2))\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:58:40.105Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns1.map(dict(s2))\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:58:40.140Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns1.map(dict(s2))\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T10:59:56.886Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns3 = pd.Series(my_series.index, index=my_series.values)\\n\\ns1.map(dict(s3))\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T10:59:56.886Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "my_series" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:00:06.158Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns3 = pd.Series(s2.index, index=s2.values)\\n\\ns1.map(dict(s3))\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:00:06.211Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns3 = pd.Series(s2.index, index=s2.values)\\n\\ns1.map(dict(s3))\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:00:16.140Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns3 = pd.Series(s2.index, index=s2.values)\\n\\ns1.map(s3)\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:00:16.179Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"s1 = pd.Series([1, 2, 1, 3])\\ns2 = pd.Series([1, 2, 4, 3])\\n\\ns3 = pd.Series(s2.index, index=s2.values)\\n\\ns1.map(s3)\\n# dict(s1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:01:59.184Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(df2.index, index=df2.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:02.568Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(df2.index, index=df2.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:05.240Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(df2.index, index=df2.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3404}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:05.242Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(df2.index, index=df2.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3404}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:12.480Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(df2.index, index=df2.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:13.265Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(df2.index, index=df2.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":473}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:21.713Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:21.933Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":220}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:26.262Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:26.485Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3424}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:58.216Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:02:58.454Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":220}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:03:11.006Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(values=tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:03:11.006Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"Series.__init__() got an unexpected keyword argument "values"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:03:17.391Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:03:17.648Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":239}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:03:39.542Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:03:39.794Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3444}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:03:54.347Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:03:54.652Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":239}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:05.158Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:05.399Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":239}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:14.586Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# # tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n# df\\n\\n# tmp\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:14.756Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# # tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n# df\\n\\n# tmp\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2097}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:26.904Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:27.147Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\ntmp\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":239}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:30.260Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:30.543Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\\n\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3444}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:52.023Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:04:52.273Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3424}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:05:05.042Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:05:05.749Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\ndf.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3361}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:05:22.025Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\")\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:05:22.759Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"]\\n\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\")\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":220}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:05:45.916Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:05:45.977Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3424}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:05:56.484Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:05:56.888Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3361}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:25.582Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ndf2\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:25.739Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ndf2\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2133}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:37.755Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"]\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:37.905Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"]\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":239}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:47.742Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:47.903Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:50.255Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index()\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:50.440Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index()\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1811}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:06:58.601Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index().drop(column=\\\"index\\\")\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:06:58.601Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"DataFrame.drop() got an unexpected keyword argument "column"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:07:01.674Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index().drop(columns=\\\"index\\\")\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:07:01.838Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index().drop(columns=\\\"index\\\")\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1467}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:07:40.109Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:07:40.265Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:07:42.468Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:07:42.623Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\n# tmp = df2[\\\"session_num\\\"]\\n\\n# tmp = pd.Series(tmp.index, index=tmp.values)\\n\\n# df["new_session_num"] = df["session_num"].map(tmp)\\n\\n# df.sort_values(\\\"action_time\\\")\\n# tmp\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":239}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:07:57.982Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\")\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:07:58.591Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\")\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3404}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:08:07.491Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:08:07.995Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\n\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3341}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:09:28.035Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\ndf["session_num"] = df["session_num"].map(tmp)\\ndf.sort_values(\\\"action_name\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:09:33.537Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\ndf["session_num"] = df["session_num"].map(tmp)\\ndf.sort_values(\\\"action_name\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3156}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:09:54.653Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:10:35.023Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":3,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:10:51.910Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:10:52.501Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":3,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2890}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:10:55.518Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:10:56.053Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":4,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2890}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:11:00.179Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"ac7a0f832e974e0d87afc97bfe257476\",\"cell_num\":null,\"cell_source\":\"df.sort_values(by=\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:11:05.249Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":4,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\ndf["session_num"] = df["session_num"].map(tmp)\\ndf.sort_values(\\\"action_name\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:11:09.469Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":5,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\ndf["session_num"] = df["session_num"].map(tmp)\\ndf.sort_values(\\\"action_name\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2724}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:11:33.747Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":2,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:12:12.090Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f587a4dc26a6401d9941dfbb718b5ecf\",\"cell_num\":5,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n    \\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:12:30.761Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":4,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_name\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:12:34.815Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":4,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_name\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3163}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:12:39.176Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":4,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_tim\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:12:39.176Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":4,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""action_tim"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:12:40.659Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":4,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:12:41.304Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":4,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3120}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:13:33.068Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"user_id\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:13:33.116Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"user_id\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:13:38.697Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"user_id\\\").count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:13:38.945Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"user_id\\\").count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2973}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:13:47.734Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"user_id\\\").unique()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:13:47.734Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrameGroupBy" object has no attribute "unique"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:13:56.629Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df[\\\"used_id\\\"]unique()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:13:56.629Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"invalid syntax (2464258403.py, line 1)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:14:00.090Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df[\\\"used_id\\\"].unique()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:14:00.090Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""used_id"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:14:07.483Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df[\\\"user_id\\\"].unique()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:14:07.553Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df[\\\"user_id\\\"].unique()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":839}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:14:15.181Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"len(df[\\\"user_id\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:14:15.248Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"len(df[\\\"user_id\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":20}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:14:44.295Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"user_id\\\").sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:14:44.295Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"datetime64 type does not support sum operations\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:15:20.491Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"user_id\\\").count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:15:20.684Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.groupby(\\\"user_id\\\").count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2973}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:15:56.278Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:15:56.823Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2973}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:16:26.369Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:16:26.799Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:11.701Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").agg(["count"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:12.252Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").agg(["count"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3161}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:28.254Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:31.457Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.group_.value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":990}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:33.339Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.group_by().value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:17:33.339Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrame" object has no attribute "group_by"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:38.444Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:38.841Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:41.677Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":5,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:41.711Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":5,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:17:42.111Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":6,\"cell_source\":\"df.dropna().groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:19:26.819Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df[\\\"day\\\"].dt.day\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:19:26.819Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""day"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:19:33.329Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df[\\\"day\\\"].dt.week\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:19:33.329Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""day"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:19:37.557Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df[\\\"day\\\"].dt.day_of_year\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:19:37.557Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""day"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:20:38.786Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["Date"].dt.date\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:20:38.786Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""Date"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:20:46.415Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:20:47.200Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4692}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:21:55.617Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"date\\\", \\\"user_id\\\"])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:21:56.273Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"date\\\", \\\"user_id\\\"])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:22:04.753Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"date\\\", \\\"user_id\\\"]).mean()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:22:04.753Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"Could not convert Action_6Action_10Action_0Action_9Action_4Action_3 to numeric\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:22:46.554Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"date\\\", \\\"user_id\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:22:47.797Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"date\\\", \\\"user_id\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4027}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:24:32.153Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:24:33.401Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4063}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:25:09.438Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[\\\"user_id\\\", \\\"date\\\"].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:25:09.438Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\"("user_id", "date")\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:25:20.737Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:25:22.101Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2974}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:25:29.745Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).mean()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:25:31.049Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).mean()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2974}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:25:42.576Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).mean()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:25:43.957Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).mean()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2024}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:26:04.547Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:26:06.071Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:27:41.241Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:27:42.757Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":57}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:28:43.405Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:28:44.677Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:29:23.516Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:29:24.876Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1603}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:29:33.509Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:29:34.909Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:29:55.625Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count()[0]\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:29:55.625Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\"0\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:30:00.505Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).groupby(\\\"user_id\\\").mean()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:30:00.505Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrameGroupBy" object has no attribute "groupby"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:30:04.151Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).groupby(\\\"user_id\\\").mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:30:04.151Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrameGroupBy" object has no attribute "groupby"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:30:10.320Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:30:11.552Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1603}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:30:36.901Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean().rename({\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:30:38.106Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean().rename({\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1603}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:31:14.101Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:31:15.336Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:31:16.633Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:31:17.804Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1603}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:31:35.105Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename({\\\"session_num\\\": \\\"some_name\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:31:36.344Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename({\\\"session_num\\\": \\\"some_name\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1603}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:31:43.537Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\ntype(res)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:31:44.709Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\ntype(res)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":44}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:32:01.741Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"some_name\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:32:02.829Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"some_name\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1575}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:32:06.669Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:32:07.883Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1570}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:32:10.974Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":6,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:32:11.002Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"821e49d8096447c4ab1b630fbaf29af7\",\"cell_num\":6,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:32:12.270Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":7,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1570}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:44:26.852Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"32a37b63fe164a62831a6b7caac0de8c\",\"cell_num\":7,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:45:02.116Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"950c9527366b40369efeced12865989d\",\"cell_num\":8,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:45:02.117Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"950c9527366b40369efeced12865989d\",\"cell_num\":8,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:45:02.174Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"950c9527366b40369efeced12865989d\",\"cell_num\":8,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:45:12.550Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"950c9527366b40369efeced12865989d\",\"cell_num\":8,\"cell_source\":\"## Third\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:45:12.565Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":8,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:45:20.040Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":9,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:45:20.080Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":9,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:46:07.540Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"821e49d8096447c4ab1b630fbaf29af7\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:46:11.586Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":8,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:46:11.605Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":8,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:46:11.676Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":9,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:46:13.243Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":8,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:46:13.282Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":8,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:46:44.552Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":8,\"cell_source\":\"df.groupby(\\\"session_num\\\").count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:46:45.175Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":8,\"cell_source\":\"df.groupby(\\\"session_num\\\").count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2871}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:48:31.584Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(lambda x: \\\", \\\".join(x)).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:48:31.584Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"sequence item 18: expected str instance, float found\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:49:39.704Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:49:44.344Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3382}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:49:46.962Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:49:49.765Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2755}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:50:06.196Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df2.sort_values(\\\"action_time\\\")\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:50:06.196Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""action_time"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:50:07.915Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df2.sort_values(\\\"action_time\\\")\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:50:07.915Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""action_time"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:50:14.386Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:50:18.229Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:50:22.763Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:50:25.821Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2755}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:50:32.489Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:50:35.848Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\\n\\ndef \",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2755}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:51:09.151Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":10,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:51:09.151Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":10,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"IndentationError\\\",\\\"evalue\\\":\\\"expected an indented block after "if" statement on line 7 (4214190626.py, line 7)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:52:20.132Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"session_num\\\"].apply(repeats)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:52:20.132Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"object of type "int" has no len()\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:52:46.927Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\n# df2[\\\"session_num\\\"].apply(repeats)\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:52:50.144Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\n# df2[\\\"session_num\\\"].apply(repeats)\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2755}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:53:07.230Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:53:10.952Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":238}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:53:37.878Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:53:42.118Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":36}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:54:38.818Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"950c9527366b40369efeced12865989d\",\"cell_num\":7,\"cell_source\":\"## Third\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:54:51.385Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"950c9527366b40369efeced12865989d\",\"cell_num\":7,\"cell_source\":\"## The probability of repeating the same action three times in a row during one session\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:55:00.684Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"af25e4f2440f42aa8c144ca514dbcbe0\",\"cell_num\":10,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:55:00.685Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"af25e4f2440f42aa8c144ca514dbcbe0\",\"cell_num\":10,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:55:00.728Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"af25e4f2440f42aa8c144ca514dbcbe0\",\"cell_num\":10,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:55:03.843Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"af25e4f2440f42aa8c144ca514dbcbe0\",\"cell_num\":10,\"cell_source\":\"The 0.95 quantile of distribution of time delta between the actions of the same type distribution during one session\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:55:03.854Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":10,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:55:10.166Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"af25e4f2440f42aa8c144ca514dbcbe0\",\"cell_num\":10,\"cell_source\":\"## The 0.95 quantile of distribution of time delta between the actions of the same type distribution during one session\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:56:16.518Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df.groupby(\\\"action_name\\\")[\\\"action_time\\\"].agg()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:56:16.518Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"Must provide "func" or named aggregation **kwargs.\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:56:38.283Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\").sort_values(\\\"action_time\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:56:38.283Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrameGroupBy" object has no attribute "sort_values"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:56:48.167Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":9,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:56:51.615Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":11,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":36}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:57:04.960Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df.groupby(\\\"action_name\\\")[\\\"action_time\\\"].reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:57:04.960Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""SeriesGroupBy" object has no attribute "reset_index"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:57:09.639Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df.groupby(\\\"action_name\\\")[\\\"action_time\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:57:09.688Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df.groupby(\\\"action_name\\\")[\\\"action_time\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":89}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:57:17.059Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"pd.DataFrame(df.groupby(\\\"action_name\\\")[\\\"action_time\\\"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:57:17.710Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"pd.DataFrame(df.groupby(\\\"action_name\\\")[\\\"action_time\\\"])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2926}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:57:47.539Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"pd.DataFrame(df.groupby([\\\"session_num\\\", \\\"action_num\\\"]))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T11:57:47.539Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""action_num"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T11:58:01.367Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"pd.DataFrame(df.groupby([\\\"session_num\\\", \\\"action_name\\\"]))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.888Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.892Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.895Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.899Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.902Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.905Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.908Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.909Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:02:30.911Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\nquantile = df[\\\"delta_time\\\"].quantile(0.95)\\nquantile\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:03:02.871Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:03:03.117Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":12,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3345}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:03:44.613Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.groupby([\\\"session_num\\\"])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:03:44.662Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.groupby([\\\"session_num\\\"])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:03:52.733Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.groupby([\\\"session_num\\\", \\\"action_name\\\"])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:03:52.790Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.groupby([\\\"session_num\\\", \\\"action_name\\\"])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:03:57.677Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"]\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:03:57.727Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"]\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":89}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:04:00.745Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:04:04.236Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":240}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:04:23.743Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:04:25.625Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":372}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:04:45.275Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff().quantile(0.95)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:04:46.897Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":11,\"cell_source\":\"# df[\\\"delta_time\\\"] = df.groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff()\\n# quantile = df[\\\"delta_time\\\"].quantile(0.95)\\n# quantile\\ndf.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff().quantile(0.95)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":52}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:05:46.701Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:05:46.867Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:05:49.814Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:05:50.030Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3920}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:06:01.989Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df1 = df.dropna()\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:06:02.924Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df1 = df.dropna()\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":428},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3997}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:06:12.866Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:06:13.083Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3920}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:06:25.674Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:06:26.283Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3977}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:06:52.832Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:07:03.630Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:07:05.642Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":1,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":93},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":695},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1319},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":2161},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:07:06.414Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:07:08.606Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"4ec2bd507eb9496e8ca879f3e0492fb4\",\"cell_num\":12,\"cell_source\":\"## Is there statistical difference of activity in different days of the week? And between weekends and workdays?\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:09:19.966Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1[[\\\"day_of_week\\\"]].value_counts()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:09:20.585Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\ndf1[[\\\"day_of_week\\\"]].value_counts()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":216}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:10:16.516Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf1 = df1[[\\\"day_of_week\\\"]].value_counts(reset_index=True)\\n\\nsns.barplot(data=df1, x=\\\"\\\", y=\\\"body_mass_g\\\")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:10:16.516Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"DataFrame.value_counts() got an unexpected keyword argument "reset_index"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:11:33.090Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf1 = df1[[\\\"day_of_week\\\"]].value_counts().reset_index()\\n\\nsns.barplot(data=df1, x=\\\"day_of_week\\\")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:11:34.258Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf1 = df1[[\\\"day_of_week\\\"]].value_counts().reset_index()\\n\\nsns.barplot(data=df1, x=\\\"day_of_week\\\")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":45},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":7349}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:12:32.227Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf1[[\\\"day_of_week\\\"]].value_counts().plot.bar()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:12:33.160Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf1[[\\\"day_of_week\\\"]].value_counts().plot.bar()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":45},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":18753}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:14:49.185Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\nsns.barplot(x=df2.index, y=df2.values)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:14:49.185Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NotImplementedError\\\",\\\"evalue\\\":\\\"isna is not defined for MultiIndex\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:15:00.306Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# sns.barplot(x=df2.index, y=df2.values)\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:15:00.862Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# sns.barplot(x=df2.index, y=df2.values)\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":216}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:16:04.656Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\nsns.barplot(x=df2.index, y=df2.values)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:16:04.656Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NotImplementedError\\\",\\\"evalue\\\":\\\"isna is not defined for MultiIndex\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:16:33.827Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\nsns.barplot(data=df2, x=list(range(0, 7)))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:16:34.597Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\nsns.barplot(data=df2, x=list(range(0, 7)))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":39},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":8397}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:16:45.275Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\nsns.barplot(data=df2, x=df2.index)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:16:46.114Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\nsns.barplot(data=df2, x=df2.index)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":39},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":8397}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:16:52.896Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# sns.barplot(data=df2, x=df2.index)\\ndf2.index\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:16:53.427Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# sns.barplot(data=df2, x=df2.index)\\ndf2.index\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":184}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:17:29.215Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\nsns.barplot(x=df2.index, y=df2.values)\\n# df2.index\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:17:29.215Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NotImplementedError\\\",\\\"evalue\\\":\\\"isna is not defined for MultiIndex\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:18:15.101Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\nsns.barplot(x=df2.index, y=df2.values)\\ndf2.index\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:18:15.101Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NotImplementedError\\\",\\\"evalue\\\":\\\"isna is not defined for MultiIndex\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:18:17.886Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# sns.barplot(x=df2.index, y=df2.values)\\ndf2.index\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:18:18.436Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# sns.barplot(x=df2.index, y=df2.values)\\ndf2.index\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":184}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:18:27.715Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# sns.barplot(x=df2.index, y=df2.values)\\ndf2[df2.index]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:18:28.250Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# sns.barplot(x=df2.index, y=df2.values)\\ndf2[df2.index]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":216}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:18:42.055Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\\n# df2[df2.index]\\nsns.barplot(x=df2.index, y=df2)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:18:42.055Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NotImplementedError\\\",\\\"evalue\\\":\\\"isna is not defined for MultiIndex\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:19:28.391Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar");\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:19:29.147Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar");\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17821}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:20:08.964Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar", x=[1, 2, 3, 4, 5])\\nplt.\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:20:08.964Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"invalid syntax (2463021811.py, line 10)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:20:12.169Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar", x=[1, 2, 3, 4, 5])\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:20:12.992Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar", x=[1, 2, 3, 4, 5])\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17821}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:20:19.798Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:20:20.555Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17821}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:21:28.354Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar")\\ndf2.sort_by_index()\\nplt.ylabel(\\\"activity\\\")\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17821}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:21:28.354Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""Axes" object has no attribute "sort_by_index"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:21:35.136Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[\\\"day_of_week\\\"].value_counts().plot(kind="bar")\\ndf2.sort_index()\\nplt.ylabel(\\\"activity\\\")\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17821}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:21:35.136Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""Axes" object has no attribute "sort_index"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:22:11.253Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\ndf2.sort_index()\\nplt.ylabel(\\\"activity\\\")\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":18753}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:22:11.253Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""Axes" object has no attribute "sort_index"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:22:22.612Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar", x=list(range(0, 7)))\\n\\nplt.ylabel(\\\"activity\\\")\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:22:23.407Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar", x=list(range(0, 7)))\\n\\nplt.ylabel(\\\"activity\\\")\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":41},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":20577}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:22:53.141Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar"))\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:22:53.141Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"unmatched ")" (488393432.py, line 9)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:23:00.264Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:23:01.069Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":27377}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:23:06.775Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:23:06.797Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":13,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:23:07.577Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":27377}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:25:45.217Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.weekday()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:25:45.217Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\""Series" object is not callable\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:25:50.295Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.weekday\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:25:51.090Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.weekday\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":27377}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:26:47.502Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.dayname\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:26:47.502Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DatetimeProperties" object has no attribute "dayname"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:26:50.263Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.dayname()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:26:50.263Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DatetimeProperties" object has no attribute "dayname"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:26:52.014Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:26:55.069Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":36505}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:27:33.813Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df1[\\\"is_weekday\\\"] = df[\\\"action_time\\\"].dt.weekday()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"is_weekday\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:27:33.813Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\""Series" object is not callable\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:27:40.110Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df1[\\\"is_weekday\\\"] = df[\\\"action_time\\\"].dt.weekday\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"is_weekday\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:27:40.482Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df1[\\\"is_weekday\\\"] = df[\\\"action_time\\\"].dt.weekday\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"is_weekday\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":27217}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:27:57.338Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"# df1[\\\"is_weekday\\\"] = df[\\\"action_time\\\"].dt.weekday\\n\\n# # df1 = \\n\\n# # sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\n# df2 = df1[[\\\"is_weekday\\\"]].value_counts().plot(kind="bar")\\n\\n# plt.ylabel(\\\"activity\\\")\\n# plt.title(\\\"activity by the day of the week\\\")\\n# plt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\\ndf[\\\"action_time\\\"].dt.weekday\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:27:57.482Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"# df1[\\\"is_weekday\\\"] = df[\\\"action_time\\\"].dt.weekday\\n\\n# # df1 = \\n\\n# # sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\n# df2 = df1[[\\\"is_weekday\\\"]].value_counts().plot(kind="bar")\\n\\n# plt.ylabel(\\\"activity\\\")\\n# plt.title(\\\"activity by the day of the week\\\")\\n# plt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\\ndf[\\\"action_time\\\"].dt.weekday\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":219}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:29:11.011Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:29:11.011Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\""Series" object is not callable\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:29:14.937Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:29:15.918Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":27377}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:29:51.161Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\nweekend = df2[5] + df2[6]\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":18753}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:29:51.161Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\""Axes" object is not subscriptable\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:04.048Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\nweekend = df2.loc[5] + df2[6]\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nsns.barplot(x=[\\\"workdays\\\", \\\"weekend\\\"], y=[workdays, weekend])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":18753}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:32:04.048Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""Axes" object has no attribute "loc"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:10.627Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\nweekend = df2[5] + df2[6]\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nsns.barplot(x=[\\\"workdays\\\", \\\"weekend\\\"], y=[workdays, weekend])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":18753}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:32:10.627Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\""Axes" object is not subscriptable\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:15.138Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":14,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:17.528Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":15,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\nweekend = df2[5] + df2[6]\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nsns.barplot(x=[\\\"workdays\\\", \\\"weekend\\\"], y=[workdays, weekend])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":18753}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:32:17.528Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":15,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\""Axes" object is not subscriptable\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:39.874Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:39.933Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":663}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:42.672Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df[0]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:32:42.672Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\"0\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:44.901Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df.iloc[0]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:44.957Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df.iloc[0]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":46}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:52.771Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df.iloc[0][\\\"A\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:52.822Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df.iloc[0][\\\"A\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":18}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:56.704Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df.loc[0][\\\"A\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:32:56.762Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"tmp_df = pd.DataFrame({\\\"A\\\": [1, 2, 3]})\\ntmp_df.loc[0][\\\"A\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":18}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:33:09.607Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\nweekend = df2.loc[5] + df2.loc[6]\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nsns.barplot(x=[\\\"workdays\\\", \\\"weekend\\\"], y=[workdays, weekend])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":18753}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:33:09.607Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""Axes" object has no attribute "loc"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:33:18.597Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5] + df2.loc[6]\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nsns.barplot(x=[\\\"workdays\\\", \\\"weekend\\\"], y=[workdays, weekend])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:33:18.597Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ValueError\\\",\\\"evalue\\\":\\\"setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:33:35.935Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5] + df2.loc[6]\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], y=[workdays, weekend])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:33:35.935Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"bar() missing 1 required positional argument: "height"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:33:44.023Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5] + df2.loc[6]\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":9653}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:33:44.023Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ValueError\\\",\\\"evalue\\\":\\\"setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:19.792Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5] + df2.loc[6]\\n\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\n\\nweekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:20.400Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5] + df2.loc[6]\\n\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\n\\nweekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":95}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:27.697Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values + df2.loc[6]\\n\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:28.266Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values + df2.loc[6]\\n\\nworkdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:32.633Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n# weekend = df2.loc[5].values + df2.loc[6]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:33.252Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n# weekend = df2.loc[5].values + df2.loc[6]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":45}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:36.603Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n# weekend = df2.loc[5].values + df2.loc[6]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:37.207Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n# weekend = df2.loc[5].values + df2.loc[6]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:53.940Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n# weekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\\ndf2.sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:34:54.540Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n# weekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\\ndf2.sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":24}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:35:00.153Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n# weekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\\ndf2.sum()\\nweekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:35:00.738Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n# weekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\\ndf2.sum()\\nweekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":78}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:35:05.048Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\\ndf2.sum()\\nweekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:35:05.617Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\\ndf2.sum()\\nweekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:35:07.801Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\\ndf2.sum()\\n# weekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:35:08.336Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\n# plt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\ndf2.loc[5].values[0]\\ndf2.sum()\\n# weekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":24}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:35:50.175Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\nworkdays = df2.sum()\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\n# df2.loc[5].values[0]\\n# weekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:35:50.982Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0]\\nworkdays = df2.sum()\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\n# df2.loc[5].values[0]\\n# weekend\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":51},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":16017}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:36:04.895Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = df2.sum() / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:36:05.629Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = df2.sum() / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":51},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":13297}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:37:06.894Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = df2.sum() / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.label(\\\"average by day per workdays/weekend\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":13297}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T12:37:06.894Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\"module "matplotlib.pyplot" has no attribute "label"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:37:12.526Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = df2.sum() / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.title(\\\"average by day per workdays/weekend\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:37:13.299Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = df2.sum() / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.title(\\\"average by day per workdays/weekend\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":70},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":21441}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:37:22.890Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = df2.sum() / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:37:23.601Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = df2.sum() / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":48},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":25297}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:37:41.946Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = (df2.sum() - weekend) / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:37:42.774Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = df2.loc[5].values[0] + df2.loc[6].values[0] / 2\\nworkdays = (df2.sum() - weekend) / 5\\n\\n# workdays = df2.loc[0] + df2.loc[1] + df2.loc[2] + df2.loc[3] + df2.loc[4]\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":48},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":25297}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:39:31.184Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:39:33.511Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":36505},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":27917}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:39:38.470Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:39:40.929Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":36505}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:39:46.599Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\\ndf1[[\\\"day_of_week\\\"]].value_counts()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:39:49.080Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\\n# plt.xlabel(\\\"activity\\\")\\ndf1[[\\\"day_of_week\\\"]].value_counts()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":36505},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":216}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:40:05.392Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0]) / 2\\nworkdays = (df2.sum() - weekend) / 5\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:40:06.716Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0]) / 2\\nworkdays = (df2.sum() - weekend) / 5\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays, weekend])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":48},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":30221}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:40:22.964Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0])\\nworkdays = (df2.sum() - weekend)\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays / 5, weekend / 2])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:40:23.895Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":14,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0])\\nworkdays = (df2.sum() - weekend)\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays / 5, weekend / 2])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":48},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":28413}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:40:32.723Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:40:34.304Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":13,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\n# df1 = \\n\\n# sns.barplot(data=df1, x=\\\"day_of_week\\\").plot.bar()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":36505}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:42:47.492Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":15,\"cell_source\":\"## My own metrics\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:42:47.507Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"de2f4a3e9b0c4eca855dc9672efe856b\",\"cell_num\":15,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:42:47.581Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5aea0d5eb4b84d72a12d026f01f57a8a\",\"cell_num\":16,\"cell_source\":\"## My own metrics\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:42:50.198Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"dba36be65f3d438c8d98ea424a8d439d\",\"cell_num\":15,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:42:50.199Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"dba36be65f3d438c8d98ea424a8d439d\",\"cell_num\":15,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:42:50.248Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"dba36be65f3d438c8d98ea424a8d439d\",\"cell_num\":15,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"## My own metrics\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:42:51.610Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"dba36be65f3d438c8d98ea424a8d439d\",\"cell_num\":15,\"cell_source\":\"## My own metrics\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:44:18.776Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:46:18.440Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":3,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:46:19.026Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":3,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:46:21.793Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":3,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:46:22.660Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":3,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4397}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:46:29.205Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":3,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\\ndf.head(20)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:46:29.627Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":3,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\\ndf.head(20)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":7247}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:46:33.319Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":3,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\\ndf.head(50)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:46:33.921Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":3,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\\ndf.head(50)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":16973}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:49:30.420Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:55:44.163Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"6f42e4f6c86f4cdd8fafc1e9e8b074dd\",\"cell_num\":18,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:55:47.171Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"4ce3bdac191b4597aeaedbe7cd8439b3\",\"cell_num\":19,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:55:47.173Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"4ce3bdac191b4597aeaedbe7cd8439b3\",\"cell_num\":19,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:55:47.210Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"4ce3bdac191b4597aeaedbe7cd8439b3\",\"cell_num\":19,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:55:52.895Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"4ce3bdac191b4597aeaedbe7cd8439b3\",\"cell_num\":19,\"cell_source\":\"# Visualization\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:55:52.914Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":19,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:25.331Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"5e12602a43244dfb859d9f629f11695a\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:25.333Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"5e12602a43244dfb859d9f629f11695a\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:25.446Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"5e12602a43244dfb859d9f629f11695a\",\"cell_num\":2,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\n# cnt_with_repeatitions = {}\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n#     marked_with_rep = False\\n#     session_length = 0\\n    \\n    for action in tmp[1:]:\\n#         session_length += 1\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n        \\n#         if not marked and session_length  and action_name == action_name_lst[-1] and action_name == action_name_lst[-1]:\\n#             marked = True\\n#             cnt_with_repeatitions += 1\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:27.809Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"ce25dd5fd9364e48872e1186aa51e3ee\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:27.908Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"ce25dd5fd9364e48872e1186aa51e3ee\",\"cell_num\":2,\"cell_type\":\"code\",\"event\":\"to_code\",\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\n# cnt_with_repeatitions = {}\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n#     marked_with_rep = False\\n#     session_length = 0\\n    \\n    for action in tmp[1:]:\\n#         session_length += 1\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n        \\n#         if not marked and session_length  and action_name == action_name_lst[-1] and action_name == action_name_lst[-1]:\\n#             marked = True\\n#             cnt_with_repeatitions += 1\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:37.827Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"a75db74b2396461e83079677678c7380\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:42.624Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"4de9e4c7d0b9434f942f1395f520a834\",\"cell_num\":1,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:45.587Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"4815c1f4d6e84366b6382a2780632a9b\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:45.589Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"4815c1f4d6e84366b6382a2780632a9b\",\"cell_num\":2,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:45.632Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"4815c1f4d6e84366b6382a2780632a9b\",\"cell_num\":2,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:56:55.970Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"4815c1f4d6e84366b6382a2780632a9b\",\"cell_num\":2,\"cell_source\":\"# Data Engineering\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:57:02.656Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"a75db74b2396461e83079677678c7380\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:57:14.683Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"f51821122e594d178ed873e614c162d9\",\"cell_num\":8,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:57:17.276Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"85b6b72a852a46ca9300928a085797ea\",\"cell_num\":7,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:57:17.279Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"85b6b72a852a46ca9300928a085797ea\",\"cell_num\":7,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:57:17.320Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"85b6b72a852a46ca9300928a085797ea\",\"cell_num\":7,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T12:57:31.663Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"85b6b72a852a46ca9300928a085797ea\",\"cell_num\":7,\"cell_source\":\"# Metrics Evaluation\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:02:48.674Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="time", freq="Action_1"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:02:48.674Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ValueError\\\",\\\"evalue\\\":\\\"Invalid frequency: Action_1\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:02:57.350Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:02:57.350Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""The grouper name time is not found"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:03:07.215Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:03:08.886Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":143825}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:09.486Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.figsize(10, 5)\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":143825}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:04:09.486Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\"module "matplotlib.pyplot" has no attribute "figsize"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:30.744Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.figure(figsize=(14,6))\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:32.075Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.figure(figsize=(14,6))\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":143825},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":51}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:45.480Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\nplt.figure(figsize=(14,6))\\n\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:46.812Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\nplt.figure(figsize=(14,6))\\n\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":51},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":143825}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:51.840Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\nplt.figure(figsize=(15,6))\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:53.064Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\nplt.figure(figsize=(15,6))\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":51},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":143825}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:57.221Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\nplt.figure(figsize=(20,6))\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:04:58.492Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\nplt.figure(figsize=(20,6))\\ncounts.plot(kind="line", marker="o")\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":51},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":143825}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:05:39.543Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\n\\ncounts.plot(kind="line", figsize=(20, 6)\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:05:39.543Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"invalid syntax. Perhaps you forgot a comma? (2096073278.py, line 8)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:05:44.135Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\n\\ncounts.plot(kind="line", figsize=(20, 6))\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:05:45.480Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\n\\ncounts.plot(kind="line", figsize=(20, 6))\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":697302}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:05:51.369Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\n\\ncounts.plot(kind="line", figsize=(25, 6))\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:05:52.750Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\n\\ncounts.plot(kind="line", figsize=(25, 6))\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":821550}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:05:55.790Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\n\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:05:57.028Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"# df.groupby(\\\"action_name\\\")\\n\\n# Group by day and action type, and count the number of occurrences\\ncounts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n\\n# Create line plot\\n\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\n# Set plot title and axis labels\\n\\n\\n# Show plot\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":551246}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:00.606Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"08cf22bcd03340ae889525b1026340d5\",\"cell_num\":23,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:13.170Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":23,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:14.589Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":20,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":551246}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:24.854Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"13f7766421f34220873a7404667671ca\",\"cell_num\":22,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:24.857Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"13f7766421f34220873a7404667671ca\",\"cell_num\":22,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:24.905Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"13f7766421f34220873a7404667671ca\",\"cell_num\":22,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:29.091Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"13f7766421f34220873a7404667671ca\",\"cell_num\":22,\"cell_source\":\"## the time series (line plot) of count of different actions by days\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:33.649Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":23,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:33.674Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"ba1c507bf8f74df98051e2d7755b9179\",\"cell_num\":23,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:35.053Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":24,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":551246}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:38.311Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"f03569f8879e4352bbe71058a8f6f5da\",\"cell_num\":24,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:38.312Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"f03569f8879e4352bbe71058a8f6f5da\",\"cell_num\":24,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:06:38.356Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"f03569f8879e4352bbe71058a8f6f5da\",\"cell_num\":24,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:07:07.852Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"f03569f8879e4352bbe71058a8f6f5da\",\"cell_num\":24,\"cell_source\":\"## the barchart of different actions counts\\n\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:07:07.867Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":24,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:07:14.566Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"f03569f8879e4352bbe71058a8f6f5da\",\"cell_num\":24,\"cell_source\":\"## The barchart of different actions counts\\n\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:07:59.247Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":25,\"cell_source\":\"value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:07:59.247Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":25,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "value_counts" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.682Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.684Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.686Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.688Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.689Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.691Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.693Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.694Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.696Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"6af2c9746d0d461782c3fd5e9ca68da2\",\"cell_num\":1,\"cell_source\":\"\\n# # Create bar chart\\n# print(\\\"?\\\")\\n# counts.plot(kind="bar")\\n\\n# # Set plot title and axis labels\\n# plt.title(\\\"Count of Actions\\\")\\n# plt.xlabel(\\\"Action Type\\\")\\n# plt.ylabel(\\\"Count\\\")\\n\\n# # Show plot\\n# plt.show()\\n# counts = df[\\\"action_name\\\"].value_counts()\\n# counts\\nprint(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.718Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ebbf0535bc244f9d8e6b2e86edbb137d\",\"cell_num\":1,\"cell_source\":\"print(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.731Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"de2f4a3e9b0c4eca855dc9672efe856b\",\"cell_num\":1,\"cell_source\":\"\\\"\\\"\\\"\\nideas: \\n- user activity: length / num_of_actions\\n- ngramms and skipgrams of actions\\n- \\n\\n\\\"\\\"\\\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.756Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":1,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.757Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":1,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.759Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":1,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.763Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":1,\"cell_source\":\"sns.set_theme()\\ncounts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.765Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":1,\"cell_source\":\"sns.set_theme()\\ncounts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.766Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":1,\"cell_source\":\"sns.set_theme()\\ncounts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.768Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":1,\"cell_source\":\"sns.set_theme()\\ncounts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.778Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:30.779Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:33.585Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:38.889Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:39.798Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ce25dd5fd9364e48872e1186aa51e3ee\",\"cell_num\":3,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\n# cnt_with_repeatitions = {}\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n#     marked_with_rep = False\\n#     session_length = 0\\n    \\n    for action in tmp[1:]:\\n#         session_length += 1\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n#             print(action)\\n        \\n#         if not marked and session_length  and action_name == action_name_lst[-1] and action_name == action_name_lst[-1]:\\n#             marked = True\\n#             cnt_with_repeatitions += 1\\n            \\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:39.999Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":4,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:40.187Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":5,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:40.367Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:11:40.721Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":8,\"cell_source\":\"df = df.dropna()\\ndf.groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.295Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":25,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.302Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":25,\"cell_source\":\"df.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff().quantile(0.95)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.311Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":25,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.316Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":25,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0])\\nworkdays = (df2.sum() - weekend)\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays / 5, weekend / 2])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.322Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":25,\"cell_source\":\"import scipy.stats.chi2_contingency as chi2\\n\\n# chi2()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.331Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"de2f4a3e9b0c4eca855dc9672efe856b\",\"cell_num\":25,\"cell_source\":\"\\\"\\\"\\\"\\nideas: \\n- user activity: length / num_of_actions\\n- ngramms and skipgrams of actions\\n- \\n\\n\\\"\\\"\\\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.335Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":25,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.339Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":25,\"cell_source\":\"counts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:12:32.348Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ebbf0535bc244f9d8e6b2e86edbb137d\",\"cell_num\":25,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:06.081Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf.loc[:, "new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:06.685Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf.loc[:, "new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3124}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:09.382Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":8,\"cell_source\":\"df = df.dropna()\\ndf.groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:09.780Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":9,\"cell_source\":\"df = df.dropna()\\ndf.groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:11.246Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":9,\"cell_source\":\"df1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:13:11.246Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":9,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "df1" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:17.585Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":9,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:18.628Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":9,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1570}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:22.418Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":11,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:22.499Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":12,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:29.200Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"879b8c1c6c7440158b5fb9d049bb0e3a\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:30.119Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":11,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:33.677Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":13,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":36}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:35.235Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":13,\"cell_source\":\"df.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff().quantile(0.95)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:37.081Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":13,\"cell_source\":\"df.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff().quantile(0.95)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":52}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:38.384Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":15,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:40.410Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":15,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":35049}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:41.913Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":16,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0])\\nworkdays = (df2.sum() - weekend)\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays / 5, weekend / 2])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:43.389Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":17,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0])\\nworkdays = (df2.sum() - weekend)\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays / 5, weekend / 2])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":48},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":27145}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:45.281Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"import scipy.stats.chi2_contingency as chi2\\n\\n# chi2()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:13:45.281Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ModuleNotFoundError\\\",\\\"evalue\\\":\\\"No module named "scipy"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:13:54.301Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn, scipy\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:14:03.283Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":25,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn, scipy\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":91},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1319},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":296}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:14:13.587Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn\\n!pip install scipy\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:14:46.183Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn\\n!pip install scipy\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":91},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1319},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":2020},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":362},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:15:11.121Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":19,\"cell_source\":\"import scipy.stats.chi2_contingency as chi2\\n\\n# chi2()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:15:11.121Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":19,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ModuleNotFoundError\\\",\\\"evalue\\\":\\\"No module named "scipy.stats.chi2_contingency"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:15:35.501Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:15:37.266Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":551246}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:15:39.460Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:15:40.013Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":23861}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:16:02.324Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:16:02.974Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts()\\n\\n# Create bar chart\\ncounts.plot(kind="bar")\\n\\n# Set plot title and axis labels\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\n\\n# Show plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":23861}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:17.383Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\nsns.set_theme()\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:17.641Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\nsns.set_theme()\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:22.606Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:24.042Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":545730}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:27.426Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts()\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:28.061Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts()\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":25273}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:46.691Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"9adee4eed91349c89c953b1ad5168f39\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:47.487Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"7ca3b421b6e2473b87831ba990c3bd22\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:47.836Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"a02001398b34491db368924037d5a9b6\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:17:48.538Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"979ccf8978724431bc198330b1c81dea\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:19:20.222Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:19:20.855Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":25705}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:22:52.997Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"dd508310452d4ffeab023973321e0a6a\",\"cell_num\":25,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:22:52.999Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"dd508310452d4ffeab023973321e0a6a\",\"cell_num\":25,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:22:53.048Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"dd508310452d4ffeab023973321e0a6a\",\"cell_num\":25,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"he heatmap of action_i-action_j-count where count is a count of action_i right after the action_j\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:22:56.428Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"dd508310452d4ffeab023973321e0a6a\",\"cell_num\":25,\"cell_source\":\"## The heatmap of action_i-action_j-count where count is a count of action_i right after the action_j\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:22:56.443Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":25,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:24:15.545Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"dd508310452d4ffeab023973321e0a6a\",\"cell_num\":25,\"cell_source\":\"## The heatmap of `action_i` - `action_j` - count where count is a count of `action_i` right after the `action_j`\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:30:00.217Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:30:02.675Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:30:06.261Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2750}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:30:06.263Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2750}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:34:50.861Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\npivot = pd.pivot_table(values=0, index=df2[\\\"action_name\\\"].unique(), columns=df2[\\\"action_name\\\"].unique(), fill_value=0)\\n\\n# for _, row in df.iterrows():\\n#     row["action_name"]\\npivot\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:34:50.861Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"unhashable type: "list"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:34.854Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":26,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:34.924Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":27,\"cell_source\":\"df2 = pd.DataFrame([0] * n)\\nunique_actions = df[\\\"action_name\\\"].to_list()\\n\\ndf = pd.DataFrame(np.zeros((3, 3)), index=df2[.unique(), columns=[1, 2, 3])\\n\\n# for _, row in df.iterrows():\\n#     row["action_name"]\\npivot\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:38:34.924Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"closing parenthesis ")" does not match opening parenthesis "[" (3922334409.py, line 4)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:36.748Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"unique_actions = df[\\\"action_name\\\"].to_list()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:36.868Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"unique_actions = df[\\\"action_name\\\"].to_list()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:39.536Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"unique_actions = df[\\\"action_name\\\"].to_list()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:39.695Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"unique_actions = df[\\\"action_name\\\"].to_list()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:44.102Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df[\\\"action_name\\\"].to_list()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:44.294Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df[\\\"action_name\\\"].to_list()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":14149}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:51.336Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df[\\\"action_name\\\"].unique().to_list()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:38:51.336Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""numpy.ndarray" object has no attribute "to_list"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:56.180Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df[\\\"action_name\\\"].unique()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:38:56.630Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df[\\\"action_name\\\"].unique()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":187}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:39:57.223Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = pd.DataFrame([0] * n)\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions)\\n\\n# for _, row in df.iterrows():\\n#     row["action_name"]\\npivot\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:39:57.223Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "n" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:39:59.966Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = pd.DataFrame([0] * n)\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:39:59.966Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "n" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:40:01.883Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"# df2 = pd.DataFrame([0] * n)\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:40:02.409Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"# df2 = pd.DataFrame([0] * n)\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":5312}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:40:40.353Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"# df2 = pd.DataFrame([0] * n)\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:40:40.353Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""action_name"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:41:01.348Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"# df2 = pd.DataFrame([0] * n)\\ndf = df2\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:41:01.348Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"unhashable type: "list"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:41:13.554Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"# df2 = pd.DataFrame([0] * n)\\ndf = df1\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:41:14.028Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"# df2 = pd.DataFrame([0] * n)\\ndf = df1\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":5070}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:43:46.898Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\nfor _, row in df2.iterrows():\\n    for i in range(1, len(row)):\\n        df1.loc[row[i - 1], row[i]] += 1\\n\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:43:46.898Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\"0\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:44:03.878Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\nfor _, row in df2.iterrows():\\n    print(row)\\n    for i in range(1, len(row)):\\n        df1.loc[row[i - 1], row[i]] += 1\\n\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":158},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:44:03.878Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\"0\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:46:47.147Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":26,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby(\\\"date\\\", \\\"user_id\\\").value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:46:47.149Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":26,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby(\\\"date\\\", \\\"user_id\\\").value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:46:52.085Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby(\\\"date\\\", \\\"user_id\\\").value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:46:52.085Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ValueError\\\",\\\"evalue\\\":\\\"No axis named user_id for object type DataFrame\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:47:07.295Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([]\\\"date\\\", \\\"user_id\\\"]).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:47:07.295Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"invalid syntax. Perhaps you forgot a comma? (2483600044.py, line 4)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:47:10.807Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:47:14.936Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1.groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1290}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:47:52.513Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:47:53.578Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":375}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:50:45.992Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"a9ae7bdde4584c65b27a697458e0a90c\",\"cell_num\":26,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:51:15.457Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a9ae7bdde4584c65b27a697458e0a90c\",\"cell_num\":27,\"cell_source\":\"from collections import Counter\\npairs = [pair for row in df["action_names"] for pair in zip(row[:-1], row[1:])]\\n\\n# Count the frequency of each pair of consecutive actions\\ncounts = dict(Counter(pairs))\\n\\ndf_counts = pd.DataFrame.from_dict(counts, orient="index", columns=["count"])\\ndf_counts.index.names = ["action_pair"]\\n\\n# Display the resulting counts\\nprint(df_counts)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:51:15.457Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a9ae7bdde4584c65b27a697458e0a90c\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""action_names"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:02.353Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":26,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:02.355Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":26,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:02.356Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":26,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:02.358Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":26,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:02.360Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":26,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:05.187Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:05.205Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":27,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:06.376Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3050}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:22.000Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"], reset_index=True.count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:55:22.000Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\""(" was never closed (2373296778.py, line 4)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:25.186Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"], reset_index=True).count()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:55:25.186Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"DataFrame.groupby() got an unexpected keyword argument "reset_index"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:35.300Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:36.267Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":375}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:53.411Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index=True\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:54.404Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index=True\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:55:59.089Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_interrupting\",\"cell_index\":\"\",\"cell_num\":27,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:56:00.192Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:56:01.167Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2156}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:57:02.939Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.nlargest(0.2).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:57:02.939Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""Column not found: count"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:57:09.721Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:57:10.822Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:57:12.563Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.nlargest(0.2).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T13:57:12.563Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\""float" object cannot be interpreted as an integer\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:17.583Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.quantile(0.8).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:18.134Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.quantile(0.8).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":283}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:42.861Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.quantile(0.8).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:43.346Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.quantile(0.8).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":283}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:45.546Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.quantile(0.1).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:46.118Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.quantile(0.1).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":283}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:49.397Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.quantile(0.8).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:49.970Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].apply(lambda grp: grp.quantile(0.8).sum())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":283}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:56.720Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:58:57.718Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2156}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:59:21.721Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].quantile(0.8)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:59:21.796Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].quantile(0.8)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":283}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:59:24.539Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].quantile(0.8)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:59:24.598Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].quantile(0.8)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":283}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:59:26.546Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:59:27.527Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2156}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:59:30.226Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].quantile(0.8)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T13:59:30.308Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"df1.groupby("date")["count"].quantile(0.8)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":283}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:00:53.675Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:00:56.410Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).sum()\\ntop\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:00:59.503Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).sum()\\ntop_20_percent\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:00.368Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).sum()\\ntop_20_percent\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:06.335Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:07.107Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:10.864Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:11.588Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).value_counts()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:15.741Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).value_counts()\\ntop_20_percent\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:16.478Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).value_counts()\\ntop_20_percent\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":194}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:23.804Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent)\\ntop_20_percent\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:24.570Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent)\\ntop_20_percent\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":351}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:36.058Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:36.822Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2172}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:53.470Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:01:54.227Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1984}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:02:54.935Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:02:55.610Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1984}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:03:28.217Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:03:29.252Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":578}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:14:03.700Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\n# df1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:14:04.753Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\n# df1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2156}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:16:27.327Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\nimport datetime\\nsns.set_theme()\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:16:27.613Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\nimport datetime\\nsns.set_theme()\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:16:44.083Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\n\\ndate_string = \\\"2019-09-20\\\"\\n\\ndate_object = datetime.strptime(date_string, \\\"%Y-%m-%d\\\")\\ndate_object\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:16:44.083Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\"module "datetime" has no attribute "strptime"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:17:12.139Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\n\\ndate_string = \\\"2019-09-20\\\"\\n\\ndate_object = datetime.datetime.strptime(date_string, \\\"%Y-%m-%d\\\")\\ndate_object\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:17:13.038Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\n\\ndate_string = \\\"2019-09-20\\\"\\n\\ndate_object = datetime.datetime.strptime(date_string, \\\"%Y-%m-%d\\\")\\ndate_object\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":53}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:17:24.364Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\n\\ndate_string = \\\"2019-09-20\\\"\\n\\ndate_object = datetime.datetime.strptime(date_string, \\\"%Y-%m-%d\\\")\\ndf1.iloc[0]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:17:25.251Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\n\\ndate_string = \\\"2019-09-20\\\"\\n\\ndate_object = datetime.datetime.strptime(date_string, \\\"%Y-%m-%d\\\")\\ndf1.iloc[0]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":108}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:17:30.661Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\n\\ndate_string = \\\"2019-09-20\\\"\\n\\ndate_object = datetime.datetime.strptime(date_string, \\\"%Y-%m-%d\\\")\\ndf1.iloc[0][\\\"date\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:17:31.566Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == \\\"2019-09-20\\\"]\\n\\ndate_string = \\\"2019-09-20\\\"\\n\\ndate_object = datetime.datetime.strptime(date_string, \\\"%Y-%m-%d\\\")\\ndf1.iloc[0][\\\"date\\\"]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":43}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:17:43.786Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)]\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:17:44.705Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)]\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2097}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:18:03.071Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:18:04.012Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2103}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:18:24.200Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:18:25.239Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2103}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:18:34.708Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(30)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:18:35.638Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(30)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4659}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:18:51.165Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\nlen(df1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:18:52.101Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\nlen(df1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":19}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:04.765Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\n# df1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False)\\n69 * 0.2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:05.724Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\n# df1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False)\\n69 * 0.2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":21}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:12.999Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:13.898Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2103}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:20.025Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(13)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:20.968Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(13)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2328}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:25.072Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"]\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:25.993Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"]\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":172}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:27.863Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:28.838Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":20}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:40.350Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:41.442Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":20}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:46.921Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:19:47.905Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 20)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":20}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:20:13.071Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\nlen(df1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:20:14.086Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\nlen(df1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":19}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:20:18.182Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\n97 * 0.2\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:20:19.237Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(13)[\\\"count\\\"].sum()\\n97 * 0.2\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:20:28.805Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(19)[\\\"count\\\"].sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:20:29.675Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(19)[\\\"count\\\"].sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":21}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:20:51.047Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum().drop(\\\"level_1\\\")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:20:51.047Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\"\\\\\\\"["level_1"] not found in axis\\\\\\\"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:20:57.736Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum().drop([\\\"level_1\\\"])\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:20:57.736Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\"\\\\\\\"["level_1"] not found in axis\\\\\\\"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:21:24.522Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:21:25.374Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1583}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:21:31.152Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\").plot()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:21:32.631Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ntop_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\").plot()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":38},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":60553}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:22:24.923Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n \\ncounts.plot(kind="line", figsize=(15, 6))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:22:26.408Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n \\ncounts.plot(kind="line", figsize=(15, 6))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":38},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":141626}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:23:16.708Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\ncounts\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:23:17.437Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\ncounts\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1583}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:24:15.666Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts = counts.resample("D").asfreq().fillna(0)\\n\\n# plot the data\\ncounts.plot(kind="line", y="frequency", legend=False)\\n\\n# add axis labels and a title\\nplt.xlabel("Date")\\nplt.ylabel("Frequency (days)")\\nplt.title("Frequency by Day")\\n\\n# show the plot\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:24:15.666Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of "Index"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:25:00.084Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\nplt.plot(df.index, df["counts"])\\nplt.xlabel("Date")\\nplt.ylabel("Counts")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:25:00.084Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""counts"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:25:13.109Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\nplt.plot(counts.index, counts["counts"])\\nplt.xlabel("Date")\\nplt.ylabel("Counts")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:25:13.109Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""counts"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:25:18.336Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\nplt.plot(counts.index, counts["count"])\\nplt.xlabel("Date")\\nplt.ylabel("Counts")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:25:19.622Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\nplt.plot(counts.index, counts["count"])\\nplt.xlabel("Date")\\nplt.ylabel("Counts")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":61805}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:26:04.831Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts.plot(kind=\\\"line\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:26:06.249Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts.plot(kind=\\\"line\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":38},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":60553}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:26:16.027Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:26:17.797Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":38},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":239711}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:26:56.537Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:26:58.170Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":40},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":248063}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:27:02.192Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:27:03.706Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\n# counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\n# counts.plot(kind="line", figsize=(15, 6))\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":248063}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:27:18.632Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:27:20.213Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":248851}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:28:50.442Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\nmonth_names = df.index.strftime("%B")  # extract month names from index\\n\\nplt.xticks(df.index, month_names)\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:28:50.442Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""Index" object has no attribute "strftime"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:30:00.981Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\nmonth_names = counts.index.strftime("%B")  # extract month names from index\\n\\n\\ndf.index = counts.to_datetime(counts.index)\\nplt.xticks(counts.index, month_names)\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:30:00.981Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""Index" object has no attribute "strftime"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:30:45.472Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ndf.index = counts.to_datetime(counts.index)\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:30:45.472Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""DataFrame" object has no attribute "to_datetime"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:30:49.941Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:30:51.685Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":248851}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:31:12.402Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(19)[\\\"count\\\"].sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:31:13.472Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":27,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ndf1[df1[\\\"date\\\"] == datetime.date(2019, 9, 21)].sort_values(\\\"count\\\", ascending=False).head(19)[\\\"count\\\"].sum()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":21}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:31:14.346Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:31:15.817Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":248851}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:31:28.798Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ndf1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:31:31.181Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":27,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ndf1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":248851}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:31:32.102Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"a20e28c2cd3e4b2983050b62b5b32ba1\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:33:59.344Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2.loc[:10, \\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:33:59.344Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyboardInterrupt\\\",\\\"evalue\\\":\\\"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:34:00.429Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2.loc[:10, \\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:34:03.983Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2.loc[:10, \\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":5073}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:34:10.068Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2.loc[:50, \\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:34:14.623Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2.loc[:50, \\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":5116}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:34:31.568Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2.loc[\\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:34:31.568Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""action_name"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:38:40.073Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":27,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\nCounter\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:38:40.073Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyboardInterrupt\\\",\\\"evalue\\\":\\\"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:38:40.100Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\ndf1 = pd.DataFrame(0, index=unique_actions, columns=unique_actions)\\n\\n# For each session, update the counts for consecutive pairs of actions\\nfor lst in df2[\\\"action_name\\\"]:\\n    lst = np.array(lst) # Convert to NumPy array for faster indexing\\n    df1.loc[lst[:-1], lst[1:]] += 1 # Increment counts using NumPy indexing and broadcasting\\n\\n# Convert the dataframe to integer type\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:39:23.641Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\ndf1 = pd.DataFrame(0, index=unique_actions, columns=unique_actions).astype(int)\\n\\n# For each session, update the counts for consecutive pairs of actions\\nfor lst in df2[\\\"action_name\\\"]:\\n    lst = np.array(lst) # Convert to NumPy array for faster indexing\\n    df1.loc[lst[:-1], lst[1:]] += 1 # Increment counts using NumPy indexing and broadcasting\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\ndf1\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:39:23.641Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ValueError\\\",\\\"evalue\\\":\\\"Setting with non-unique columns is not allowed.\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:40:24.798Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:40:28.911Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4203}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:40:45.685Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:40:49.164Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:40:53.615Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2750}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:40:53.618Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\ndf2\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2750}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:41:02.334Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:41:05.283Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:41:12.453Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\nd\\n\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4203}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:41:12.458Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\nd\\n\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4203}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:11.118Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf[["action_i", "action_j"]] = pd.DataFrame(df.index.tolist(), index=df.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nsns.heatmap(matrix, annot=True, cmap="Blues")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:16.161Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf[["action_i", "action_j"]] = pd.DataFrame(df.index.tolist(), index=df.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nsns.heatmap(matrix, annot=True, cmap="Blues")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":190609}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:34.667Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf[["action_i", "action_j"]] = pd.DataFrame(df.index.tolist(), index=df.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:42:34.667Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""session_num"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:55.991Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ce25dd5fd9364e48872e1186aa51e3ee\",\"cell_num\":3,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n\\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:58.075Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":4,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:58.230Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":5,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:58.382Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf.loc[:, "new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:58.696Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":8,\"cell_source\":\"df = df.dropna()\\ndf.groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:58.859Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":9,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:59.305Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":11,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:59.644Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":13,\"cell_source\":\"df.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff().quantile(0.95)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:42:59.983Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":15,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:43:00.156Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":16,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0])\\nworkdays = (df2.sum() - weekend)\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays / 5, weekend / 2])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:43:00.334Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"# from scipy.stats as chi2\\n\\n# chi2()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:43:00.758Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"de2f4a3e9b0c4eca855dc9672efe856b\",\"cell_num\":19,\"cell_source\":\"\\\"\\\"\\\"\\nideas: \\n- user activity: length / num_of_actions\\n- ngramms and skipgrams of actions\\n- \\n\\n\\\"\\\"\\\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:43:03.445Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:43:05.531Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:45:08.323Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\nCounter\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:45:08.323Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyboardInterrupt\\\",\\\"evalue\\\":\\\"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:45:10.142Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"fe6ab19eea424b5285f0e31f32d5f798\",\"cell_num\":null,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        df1.loc[lst[i - 1], lst[i]] += 1\\n        \\nunique_actions = df[\\\"action_name\\\"].unique()\\nCounter\\n\\ndf1 = pd.DataFrame(np.zeros((len(unique_actions), len(unique_actions))), index=unique_actions, columns=unique_actions).astype(int)\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\ndf1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:45:16.939Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df.index.tolist(), index=df.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:45:16.939Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ValueError\\\",\\\"evalue\\\":\\\"Columns must be same length as key\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:45:56.874Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T14:45:56.874Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"ValueError\\\",\\\"evalue\\\":\\\"Length of values (121) does not match length of index (1971934)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:46:03.592Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:46:08.846Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = df[\\\"action_name\\\"].unique()\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":257711}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:46:38.543Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:46:43.320Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":27,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\n# Pivot the DataFrame to create a 2D count matrix\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\n\\n# Plot the matrix as a heatmap\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":257711}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:47:33.889Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:47:40.393Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"# Group actions by session and create a list of actions for each session\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n# Get unique actions\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\n\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\n# Create a dataframe with zeros for all pairs of actions\\n\\n# For each session, update the counts for consecutive pairs of actions    \\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True, cmap="Blues")\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":257711}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:47:55.797Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:48:01.129Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":261695}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:48:48.668Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"306160f6c455497584da790aa5295510\",\"cell_num\":28,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:49:07.284Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"1770f2f600af4309ae2e7a3f62b2d947\",\"cell_num\":27,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:49:07.286Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"1770f2f600af4309ae2e7a3f62b2d947\",\"cell_num\":27,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:49:07.334Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"1770f2f600af4309ae2e7a3f62b2d947\",\"cell_num\":27,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"## the time series (line plot) of all actions of the top 20 percent of active users by days\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:49:08.610Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"1770f2f600af4309ae2e7a3f62b2d947\",\"cell_num\":27,\"cell_source\":\"## the time series (line plot) of all actions of the top 20 percent of active users by days\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T14:52:41.157Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"5966c6784d2442118e29eee141a0bef4\",\"cell_num\":28,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:08:34.058Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"19051d2fd6c0483a9598466e841870e2\",\"cell_num\":29,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:08:34.060Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"19051d2fd6c0483a9598466e841870e2\",\"cell_num\":29,\"cell_source\":\"\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:08:34.125Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"cell_index\":\"19051d2fd6c0483a9598466e841870e2\",\"cell_num\":29,\"cell_type\":\"markdown\",\"event\":\"to_markdown\",\"cell_source\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:08:46.192Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"19051d2fd6c0483a9598466e841870e2\",\"cell_num\":29,\"cell_source\":\"## My own visualization\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:08:46.213Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":29,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:09:07.229Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:09:07.352Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df.groupby(\\\"session_num\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":92}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:13:35.776Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {x: 0 for x in unique_actions}\\n\\ndef decorator(last_x, d):\\n    def count_last_x(lst):\\n        for x in lst[-last_x:]:\\n            d[x] += 1\\n    return count_last_x\\n\\ndf2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(30, d))\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:13:41.980Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {x: 0 for x in unique_actions}\\n\\ndef decorator(last_x, d):\\n    def count_last_x(lst):\\n        for x in lst[-last_x:]:\\n            d[x] += 1\\n    return count_last_x\\n\\ndf2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(30, d))\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":255}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:14:36.380Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {x: 0 for x in unique_actions}\\n\\ndef decorator(last_x, d):\\n    def count_last_x(lst):\\n        for x in lst[-last_x:]:\\n            d[x] += 1\\n    return count_last_x\\n\\ndf2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(30, d))\\n\\nsns.barplot(x=d.keys(), y=d.values())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:14:36.382Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {x: 0 for x in unique_actions}\\n\\ndef decorator(last_x, d):\\n    def count_last_x(lst):\\n        for x in lst[-last_x:]:\\n            d[x] += 1\\n    return count_last_x\\n\\ndf2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(30, d))\\n\\nsns.barplot(x=d.keys(), y=d.values())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:14:39.799Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_interrupting\",\"cell_index\":\"\",\"cell_num\":30,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:14:43.980Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_interrupting\",\"cell_index\":\"\",\"cell_num\":30,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:14:45.922Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {x: 0 for x in unique_actions}\\n\\ndef decorator(last_x, d):\\n    def count_last_x(lst):\\n        for x in lst[-last_x:]:\\n            d[x] += 1\\n    return count_last_x\\n\\ndf2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(30, d))\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:14:50.579Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {x: 0 for x in unique_actions}\\n\\ndef decorator(last_x, d):\\n    def count_last_x(lst):\\n        for x in lst[-last_x:]:\\n            d[x] += 1\\n    return count_last_x\\n\\ndf2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(30, d))\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":255}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:14:54.358Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"sns.barplot(x=d.keys(), y=d.values())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T15:14:54.358Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\""bool" object has no attribute "all"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:06.486Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.bar(x=d.keys(), y=d.values())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T15:16:06.486Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"bar() missing 1 required positional argument: "height"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:09.971Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.bar(x=d.keys(), y=d.values())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T15:16:09.971Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"TypeError\\\",\\\"evalue\\\":\\\"bar() missing 1 required positional argument: "height"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:13.600Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.bar(x=d.keys(), height=d.values())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:14.237Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.bar(x=d.keys(), height=d.values())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":52},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":15781}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:26.496Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.bar(x=d.keys(), height=d.values())\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:26.911Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.bar(x=d.keys(), height=d.values())\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":15781}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:47.979Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.figure(figsize=(15, 10)\\nplt.bar(x=d.keys(), height=d.values())\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T15:16:47.979Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"SyntaxError\\\",\\\"evalue\\\":\\\"invalid syntax. Perhaps you forgot a comma? (665955713.py, line 1)\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:52.361Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.figure(figsize=(15, 10))\\nplt.bar(x=d.keys(), height=d.values())\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:16:52.686Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.figure(figsize=(15, 10))\\nplt.bar(x=d.keys(), height=d.values())\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":22295}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:17:33.048Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.figure(figsize=(12, 8))\\nplt.bar(x=d.keys(), height=d.values())\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:17:33.563Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"plt.figure(figsize=(12, 8))\\nplt.bar(x=d.keys(), height=d.values())\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":19466}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:17:39.570Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"43055cc977fd4f0eb0745b5c260393a3\",\"cell_num\":31,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:18:35.233Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"43055cc977fd4f0eb0745b5c260393a3\",\"cell_num\":32,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True, sort=False)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:18:36.320Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"43055cc977fd4f0eb0745b5c260393a3\",\"cell_num\":32,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True, sort=False)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":25777}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:19:27.910Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"43055cc977fd4f0eb0745b5c260393a3\",\"cell_num\":32,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True)\\ncounts.sort_index(inplace=True)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:19:28.714Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"43055cc977fd4f0eb0745b5c260393a3\",\"cell_num\":32,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True)\\ncounts.sort_index(inplace=True)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":26213}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:19:48.670Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {x: 0 for x in unique_actions}\\n\\ndef decorator(last_x, d):\\n    def count_last_x(lst):\\n        for x in lst[-last_x:]:\\n            d[x] += 1\\n    return count_last_x\\n\\ndf2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(10, d))\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:19:53.033Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {x: 0 for x in unique_actions}\\n\\ndef decorator(last_x, d):\\n    def count_last_x(lst):\\n        for x in lst[-last_x:]:\\n            d[x] += 1\\n    return count_last_x\\n\\ndf2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(10, d))\\nd\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":250}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:20:47.687Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"# plt.figure(figsize=(12, 8))\\nplt.bar(x=d.keys(), height=d.values())\\nplt.xticks(rotate=90)\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":22501}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T15:20:47.687Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"AttributeError\\\",\\\"evalue\\\":\\\"Text.set() got an unexpected keyword argument "rotate"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:21:05.631Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"# plt.figure(figsize=(12, 8))\\nplt.bar(x=d.keys(), height=d.values())\\nplt.xticks(rotation=90)\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:21:06.071Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"# plt.figure(figsize=(12, 8))\\nplt.bar(x=d.keys(), height=d.values())\\nplt.xticks(rotation=90)\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":24741}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:21:58.717Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [100, 50, 30, 10, 5, 3]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[-last_x:]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(10, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:22:08.425Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"kernel_interrupting\",\"cell_index\":\"\",\"cell_num\":30,\"cell_source\":\"\",\"cell_type\":\"\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:22:11.252Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [100, 50, 30, 10, 5, 3]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[-last_x:]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:23:07.509Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [100, 50, 30, 10, 5, 3]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[-last_x:]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17825},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17825},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17833},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":24741},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":19261},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":20633}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:23:07.512Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [100, 50, 30, 10, 5, 3]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[-last_x:]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17825},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17825},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17833},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":24741},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":19261},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":20633}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:24:04.695Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [100, 50, 30, 10, 5, 3]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[:last_x]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:24:33.148Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [100, 50, 30, 10, 5, 3]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[:last_x]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17825},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17825},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17821},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":24737},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":19213},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":20613}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:26:06.575Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [50, 30, 10, 5, 3, 2, 1]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[-last_x:]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":19661},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":19561},{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T15:26:06.575Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyboardInterrupt\\\",\\\"evalue\\\":\\\"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:26:15.506Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [50, 30, 10, 5, 3, 2, 1]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[-last_x:]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T15:26:48.263Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [50, 30, 10, 5, 3, 2, 1]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[-last_x:]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17825},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":17833},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":24741},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":19261},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":20633},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":23913},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":24569}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:37:34.067Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"\\ndf2 = df\\n\\ndf2["weekday"] = df2["action_time"].dt.weekday\\nweekday_hour_counts = df2.groupby(["weekday", "hour"]).size().unstack(fill_value=0)\\n\\nchi2_score, p_value, _, _ = chi2(weekday_hour_counts)\\n\\nprint(p_value, chi2_score)\\n# insignificant\\n\\ndf2["day_name"] = df2["action_time"].dt.day_name()\\ndf2["weekend"] = df2["day_name"].apply(lambda x: "weekend" if x in ["Saturday", "Sunday"] else "workday")\\n\\nweekend_hour_counts = df2.groupby(["weekend", "hour"]).size().unstack(fill_value=0)\\n\\nweekend_hour_counts.loc["weekend"] = weekend_hour_counts.loc["weekend"].divide(2)\\nweekend_hour_counts.loc["workday"] = weekend_hour_counts.loc["workday"].divide(5)\\n\\n\\nchi2_score, p_value, _, _ = chi2(weekend_hour_counts)\\n\\nprint(p_value, chi2_score)\\n# insignificat\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T17:37:34.067Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"KeyError\\\",\\\"evalue\\\":\\\""hour"\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:37:56.099Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"\\n\\ndf2 = df\\ndf2["hour"] = df2["action_time"].dt.hour\\ndf2["weekday"] = df2["action_time"].dt.weekday\\nweekday_hour_counts = df2.groupby(["weekday", "hour"]).size().unstack(fill_value=0)\\n\\nchi2_score, p_value, _, _ = chi2(weekday_hour_counts)\\n\\nprint(p_value, chi2_score)\\n# insignificant\\n\\ndf2["day_name"] = df2["action_time"].dt.day_name()\\ndf2["weekend"] = df2["day_name"].apply(lambda x: "weekend" if x in ["Saturday", "Sunday"] else "workday")\\n\\nweekend_hour_counts = df2.groupby(["weekend", "hour"]).size().unstack(fill_value=0)\\n\\nweekend_hour_counts.loc["weekend"] = weekend_hour_counts.loc["weekend"].divide(2)\\nweekend_hour_counts.loc["workday"] = weekend_hour_counts.loc["workday"].divide(5)\\n\\n\\nchi2_score, p_value, _, _ = chi2(weekend_hour_counts)\\n\\nprint(p_value, chi2_score)\\n# insignificat\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T17:37:56.099Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "chi2" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:38:03.286Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\nimport datetime\\nfrom scipy.stats import chi2_contingency as chi2\\n\\nsns.set_theme()\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:38:03.762Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\nimport datetime\\nfrom scipy.stats import chi2_contingency as chi2\\n\\nsns.set_theme()\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:38:23.501Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"df2 = df\\ndf2["hour"] = df2["action_time"].dt.hour\\ndf2["weekday"] = df2["action_time"].dt.weekday\\nweekday_hour_counts = df2.groupby(["weekday", "hour"]).size().unstack(fill_value=0)\\n\\nchi2_score, p_value, _, _ = chi2(weekday_hour_counts)\\n\\nprint(p_value, chi2_score)\\n# insignificant\\n\\ndf2["day_name"] = df2["action_time"].dt.day_name()\\ndf2["weekend"] = df2["day_name"].apply(lambda x: "weekend" if x in ["Saturday", "Sunday"] else "workday")\\n\\nweekend_hour_counts = df2.groupby(["weekend", "hour"]).size().unstack(fill_value=0)\\n\\nweekend_hour_counts.loc["weekend"] = weekend_hour_counts.loc["weekend"].divide(2)\\nweekend_hour_counts.loc["workday"] = weekend_hour_counts.loc["workday"].divide(5)\\n\\n\\nchi2_score, p_value, _, _ = chi2(weekend_hour_counts)\\n\\nprint(p_value, chi2_score)\\n# insignificat\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:38:26.079Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"df2 = df\\ndf2["hour"] = df2["action_time"].dt.hour\\ndf2["weekday"] = df2["action_time"].dt.weekday\\nweekday_hour_counts = df2.groupby(["weekday", "hour"]).size().unstack(fill_value=0)\\n\\nchi2_score, p_value, _, _ = chi2(weekday_hour_counts)\\n\\nprint(p_value, chi2_score)\\n# insignificant\\n\\ndf2["day_name"] = df2["action_time"].dt.day_name()\\ndf2["weekend"] = df2["day_name"].apply(lambda x: "weekend" if x in ["Saturday", "Sunday"] else "workday")\\n\\nweekend_hour_counts = df2.groupby(["weekend", "hour"]).size().unstack(fill_value=0)\\n\\nweekend_hour_counts.loc["weekend"] = weekend_hour_counts.loc["weekend"].divide(2)\\nweekend_hour_counts.loc["workday"] = weekend_hour_counts.loc["workday"].divide(5)\\n\\n\\nchi2_score, p_value, _, _ = chi2(weekend_hour_counts)\\n\\nprint(p_value, chi2_score)\\n# insignificat\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":83}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:00.112Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:00.213Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"1\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":18}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:06.165Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"# insignificant\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:06.223Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"# insignificant\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:43.429Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":0,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn\\n!pip install scipy\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:43.601Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":1,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\nimport datetime\\nfrom scipy.stats import chi2_contingency as chi2\\n\\nsns.set_theme()\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:43.992Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"ce25dd5fd9364e48872e1186aa51e3ee\",\"cell_num\":3,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n\\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.184Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":4,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.225Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":5,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.283Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf.loc[:, "new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.341Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":8,\"cell_source\":\"df = df.dropna()\\ndf.groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.385Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":9,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.498Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":11,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.570Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":13,\"cell_source\":\"df.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff().quantile(0.95)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.631Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":15,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.682Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":16,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0])\\nworkdays = (df2.sum() - weekend)\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays / 5, weekend / 2])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.712Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":17,\"cell_source\":\"# insignificant\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:44.773Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"de2f4a3e9b0c4eca855dc9672efe856b\",\"cell_num\":19,\"cell_source\":\"\\\"\\\"\\\"\\nideas: \\n- User activity / actions per minute: length / num_of_actions\\nUser that are faster might use techniques that would help others to improve their productivity\\n\\n- Ngramms and Skipgrams of actions:\\nIt helps to see the most commonly used features of notebooks and how what can be united and automated.\\n\\n- The last sequence of moves before the end of the session, this routine might be automated, \\nFor example the developer could delete the comments that he made and clean up the code and this can be\\nautomated.\\n\\n- Spammed actions: Count actions that are used extremely frequently during within a narrow time\\nwindow, those actions make user click the same button or repeat the same process over and over.\\nCan be automated.\\n\\n\\\"\\\"\\\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:45.290Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":22,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:45.626Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":24,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:45.972Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":26,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:46.311Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":28,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ndf1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:46.651Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"5526418d2b634344b79f65d0370d1036\",\"cell_num\":30,\"cell_source\":\"for last in [50, 30, 10, 5, 3, 2, 1]:\\n    \\n    df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\n    unique_actions = sorted(df[\\\"action_name\\\"].unique())\\n    d = {x: 0 for x in unique_actions}\\n\\n    def decorator(last_x, d):\\n        def count_last_x(lst):\\n            for x in lst[-last_x:]:\\n                d[x] += 1\\n        return count_last_x\\n\\n    df2[\\\"action_name\\\"] = df2[\\\"action_name\\\"].apply(decorator(last, d))\\n    \\n    plt.bar(x=d.keys(), height=d.values())\\n    plt.xticks(rotation=90)\\n    plt.show()\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:46.833Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"04d398fa93e340b2be5fa5af54e9218a\",\"cell_num\":31,\"cell_source\":\"# plt.figure(figsize=(12, 8))\\nplt.bar(x=d.keys(), height=d.values())\\nplt.xticks(rotation=90)\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:47.008Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"43055cc977fd4f0eb0745b5c260393a3\",\"cell_num\":32,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True)\\ncounts.sort_index(inplace=True)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\\n\\n# here we can see that the distribution changes\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:47.034Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"cac9239e4d8e44a088d98f5d1498d465\",\"cell_num\":32,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:39:47.183Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"create\",\"cell_index\":\"31b7324a1654413080cc95b2b40f188e\",\"cell_num\":33,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:40:02.392Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"35c0b3b694f84140846a21197ea62f68\",\"cell_num\":34,\"cell_source\":\"!pip install pandas\\n!pip install np\\n!pip install matplotlib\\n!pip install seaborn\\n!pip install scipy\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":697},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":91},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":1319},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":2020},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":217},{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":129}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:40:02.754Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"8d8ae31069ce43968d38872daa3b97c6\",\"cell_num\":34,\"cell_source\":\"import pandas as pd\\nimport numpy as np\\nimport matplotlib.pyplot as plt\\nfrom mining_extension import check_logging \\nimport re\\nimport seaborn as sns\\nimport datetime\\nfrom scipy.stats import chi2_contingency as chi2\\n\\nsns.set_theme()\\ncheck_logging(\\\"http://3.249.245.244:9999\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":23}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:31.005Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"ce25dd5fd9364e48872e1186aa51e3ee\",\"cell_num\":34,\"cell_source\":\"PATH_TO_DATA = \\\"./data/task1/jetnet_logs/jetnet_logs.txt\\\"\\n\\ndata = open(PATH_TO_DATA, \\\"r\\\").read().split("@")\\ndata = list(filter(len, data))\\n\\ndf = pd.DataFrame(\\n    columns = [\\\"user_id\\\", \\\"session_num\\\", \\\"action_time\\\", \\\"action_name\\\"] \\n)\\n\\nuser_id_lst, session_num_lst, action_time_lst, action_name_lst = [], [], [], []\\n\\nfor i, x in enumerate(data):\\n    if len(x.strip()) == 0:\\n        continue\\n        \\n    tmp = re.split("-> |--> |: |\\\\n", data[i])\\n    tmp = list(filter(len, tmp))\\n    \\n    user = tmp[0]\\n    \\n    match = re.match(r\\\"User(\\\\d+)\\\", user)\\n    user_id = int(match.group(1))\\n\\n    for action in tmp[1:]:\\n        action = action.strip()\\n        \\n        if len(action) == 0:\\n            continue\\n            \\n        action_pattern = r\\\"^(Action_\\\\d+|END) \\\"\\n        date_pattern = r\\\"(\\\\d{2})/(\\\\d{2})/(\\\\d{2})\\\"\\n        time_pattern = r\\\"(\\\\d{2}):(\\\\d{2}):(\\\\d{2})\\\"\\n\\n        # Parse the action name\\n        match = re.match(action_pattern, action)\\n\\n        if match:\\n            action_name = match.group(1)\\n        else:\\n            action_name = np.NaN\\n\\n        # Parse the date and time fields, if present\\n        date_match = re.search(date_pattern, action)\\n        time_match = re.search(time_pattern, action)\\n\\n        if date_match and time_match:\\n            day, month, year = date_match.groups()\\n            hour, minute, second = time_match.groups()\\n            year = \\\"20\\\" + year\\n            action_time = pd.Timestamp(int(year), int(month), int(day), int(hour), int(minute), int(second))\\n        else:\\n            action_time = np.NaN\\n\\n        user_id_lst.append(user_id) \\n        session_num_lst.append(i)\\n        \\n        action_time_lst.append(action_time)\\n        action_name_lst.append(action_name)\\n\\ndf = pd.DataFrame(\\n    {\\n        \\\"user_id\\\": user_id_lst,\\n        \\\"session_num\\\": session_num_lst, \\n        \\\"action_time\\\": action_time_lst, \\n        \\\"action_name\\\": action_name_lst\\n    }\\n)\\n\\ndf\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2911}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:31.473Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"68cf834f3a3845dcb3079a008e7e0129\",\"cell_num\":34,\"cell_source\":\"df = df[(df[\\\"action_name\\\"] != \\\"END\\\")]\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:32.329Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"a5eaa558afc74fa5b321503bef5124db\",\"cell_num\":34,\"cell_source\":\"df.sort_values(\\\"action_time\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":2896}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:33.618Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":34,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf.loc[:, "new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":428},{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":3124}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:34.333Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"331b6bdd45a84071892e5ae4bde79ffc\",\"cell_num\":34,\"cell_source\":\"df = df.dropna()\\ndf.groupby(\\\"user_id\\\").count()["session_num"].mean()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":35}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:36.151Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"006cbbb71e1545febc1ea1af35e583e0\",\"cell_num\":34,\"cell_source\":\"df1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\nres = df1[[\\\"user_id\\\", \\\"date\\\", \\\"session_num\\\"]].groupby([\\\"user_id\\\", \\\"date\\\"]).count().groupby(\\\"user_id\\\").mean()\\nres.rename(columns={\\\"session_num\\\": \\\"mean\\\"})\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":1570}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:42.339Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"53ea31bf8a86477c876851419ad2ee19\",\"cell_num\":34,\"cell_source\":\"df.sort_values(\\\"action_time\\\", inplace=True)\\ndf2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\ndef repeats(lst):\\n    for i in range(2, len(lst)):\\n        if lst[i] == lst[i - 1] == lst[i - 2]:\\n            return True\\n    return False\\n\\ndf2[\\\"action_name\\\"].apply(repeats).sum() / len(df[\\\"session_num\\\"].unique())\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":36}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:45.665Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"16fabeaa19e746a08fee530cc274c494\",\"cell_num\":34,\"cell_source\":\"df.dropna().groupby([\\\"session_num\\\", \\\"action_name\\\"])[\\\"action_time\\\"].diff().quantile(0.95)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":52}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:49.303Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"d92ae41ed569495c88a856664e462b12\",\"cell_num\":34,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_name()\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts().plot(kind="bar")\\n\\nplt.ylabel(\\\"activity\\\")\\nplt.title(\\\"activity by the day of the week\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":34725}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:53.000Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"14b4a4bf6db9474aa62c8fda86376ff4\",\"cell_num\":34,\"cell_source\":\"df.dropna(inplace=True)\\ndf1 = df\\ndf1[\\\"day_of_week\\\"] = df[\\\"action_time\\\"].dt.day_of_week\\n\\ndf2 = df1[[\\\"day_of_week\\\"]].value_counts()\\nweekend = (df2.loc[5].values[0] + df2.loc[6].values[0])\\nworkdays = (df2.sum() - weekend)\\n\\nplt.bar(x=[\\\"workdays\\\", \\\"weekend\\\"], height=[workdays / 5, weekend / 2])\\nplt.title(\\\"average by day per workdays/weekend\\\")\\nplt.ylabel(\\\"average per day\\\")\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":48},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":26301}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:53.114Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"5c4e0053a4534014810a1b7b336d9ac5\",\"cell_num\":34,\"cell_source\":\"# insignificant\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:53.215Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"de2f4a3e9b0c4eca855dc9672efe856b\",\"cell_num\":34,\"cell_source\":\"\\\"\\\"\\\"\\nideas: \\n- User activity / actions per minute: length / num_of_actions\\nUser that are faster might use techniques that would help others to improve their productivity\\n\\n- Ngramms and Skipgrams of actions:\\nIt helps to see the most commonly used features of notebooks and how what can be united and automated.\\n\\n- The last sequence of moves before the end of the session, this routine might be automated, \\nFor example the developer could delete the comments that he made and clean up the code and this can be\\nautomated.\\n\\n- Spammed actions: Count actions that are used extremely frequently during within a narrow time\\nwindow, those actions make user click the same button or repeat the same process over and over.\\nCan be automated.\\n\\n\\\"\\\"\\\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":778}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:55.126Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"f53856243cd54da781deace047f50fa6\",\"cell_num\":34,\"cell_source\":\"counts = df.groupby([pd.Grouper(key="action_time", freq="D"), "action_name"]).size().unstack(fill_value=0)\\ncounts.plot(kind="line", figsize=(15, 6))\\n\\nplt.title(\\\"Count of Actions by Day\\\")\\nplt.xlabel(\\\"Day\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":545730}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:41:56.166Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"46dd856e338b41a38ca018024f4dd922\",\"cell_num\":34,\"cell_source\":\"counts = df["action_name"].value_counts(normalize=True)\\n\\ncounts.plot(kind="bar")\\nplt.title(\\\"Count of Actions\\\")\\nplt.xlabel(\\\"Action Type\\\")\\nplt.ylabel(\\\"Count\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":25705}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:42:12.767Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"cac9239e4d8e44a088d98f5d1498d465\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:42:15.426Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"89a4d96cabff41a081914fc8dedc743b\",\"cell_num\":33,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\")[\\\"action_name\\\"].agg(list).reset_index()\\n\\nunique_actions = sorted(df[\\\"action_name\\\"].unique())\\nd = {(x, y): 0 for x in unique_actions for y in unique_actions}\\n\\ndef calc_2gram(lst):\\n    for i in range(1, len(lst)):\\n        d[(lst[i - 1], lst[i])] += 1\\n\\ndf2[\\\"action_name\\\"].apply(calc_2gram)\\n\\ndf1 = pd.DataFrame.from_dict(d, orient="index", columns=["count"])\\n\\n# Split the index into separate columns\\ndf1[["action_i", "action_j"]] = pd.DataFrame(df1.index.tolist(), index=df1.index)\\n\\nmatrix = df1.pivot(index="action_i", columns="action_j", values="count")\\nplt.figure(figsize=(20, 20))\\nsns.heatmap(matrix, annot=True)\\n\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":61},{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":261695}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:42:18.887Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"0915fe0e76a7407f8052421abe3c85a7\",\"cell_num\":33,\"cell_source\":\"def select_top_20_percent(group):\\n    return group.nlargest(int(len(group) * 0.2))\\n\\ndf1 = df\\ndf1[\\\"date\\\"] = df["action_time"].dt.date\\n\\ndf1 = df1[[\\\"user_id\\\", \\\"date\\\"]].groupby([\\\"date\\\", \\\"user_id\\\"]).value_counts().reset_index()\\n\\ntop_20_percent = df1.groupby("date")["count"].apply(select_top_20_percent).reset_index()\\ncounts = top_20_percent.groupby(\\\"date\\\").sum().drop(columns=\\\"level_1\\\")\\n\\ncounts.plot(kind=\\\"line\\\", figsize=(20, 10))\\nplt.title(\\\"actions of top 20 percent active users\\\")\\nplt.xlabel(\\\"date\\\")\\nplt.ylabel(\\\"actions\\\")\\nplt.show()\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"display_data\\\",\\\"size\\\":248851}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:43:03.007Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"31b7324a1654413080cc95b2b40f188e\",\"cell_num\":19,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"error\\\",\\\"size\\\":0}]\"}"[EVENT_SEPARATOR]' 
'"{\"time\":\"2023-05-06T17:43:03.007Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"error\",\"cell_index\":\"31b7324a1654413080cc95b2b40f188e\",\"cell_num\":19,\"cell_source\":\"{\\\"output_type\\\":\\\"error\\\",\\\"ename\\\":\\\"NameError\\\",\\\"evalue\\\":\\\"name "pred" is not defined\\\"}\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:43:06.644Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"31b7324a1654413080cc95b2b40f188e\",\"cell_num\":33,\"cell_source\":\"print(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:43:06.708Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"31b7324a1654413080cc95b2b40f188e\",\"cell_num\":33,\"cell_source\":\"print(1)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"stream\\\",\\\"size\\\":5}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:43:10.354Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"delete\",\"cell_index\":\"31b7324a1654413080cc95b2b40f188e\",\"cell_num\":null,\"cell_source\":\"\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:45:03.771Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"4815c1f4d6e84366b6382a2780632a9b\",\"cell_num\":2,\"cell_source\":\"# Data Engineering\\n\\nClear up the data, remove END, split by delimeters.\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:45:20.181Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:45:20.986Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"finished_execute\",\"cell_index\":\"7487b49159b74fc687c46dbb8521b7e6\",\"cell_num\":6,\"cell_source\":\"df2 = df.groupby(\\\"session_num\\\", as_index=False)[\\\"action_time\\\"].min()\\ndf2 = df2.sort_values(\\\"action_time\\\")\\ntmp = df2[\\\"session_num\\\"].reset_index(drop=True)\\ntmp = pd.Series(tmp.index, index=tmp.values)\\n\\ndf["new_session_num"] = df["session_num"].map(tmp)\\n\\ndf.sort_values(\\\"action_time\\\").head(10)\",\"cell_type\":\"code\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":\"[{\\\"output_type\\\":\\\"execute_result\\\",\\\"size\\\":4055}]\"}"[EVENT_SEPARATOR]' 
'"{\"ip_address\":\"192.168.56.1\",\"time\":\"2023-05-06T17:45:49.722Z\",\"kernel_id\":\"bc147b33-fa74-4bff-9f48-c88809c5bdcd\",\"notebook_name\":\"task1.ipynb\",\"event\":\"rendered\",\"cell_index\":\"85b6b72a852a46ca9300928a085797ea\",\"cell_num\":7,\"cell_source\":\"# Metrics Evaluation\",\"cell_type\":\"markdown\",\"session_id\":\"709ce80b-90a5-457e-bf6f-b7033a3261b5\",\"cell_output\":null}"[EVENT_SEPARATOR]' 
